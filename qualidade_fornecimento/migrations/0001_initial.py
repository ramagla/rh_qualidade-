# Generated by Django 4.2.16 on 2025-07-04 14:41

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ControleServicoExterno",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pedido", models.CharField(max_length=100)),
                (
                    "op",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Ordem de Produção"
                    ),
                ),
                (
                    "nota_fiscal",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Nota Fiscal",
                    ),
                ),
                (
                    "quantidade_enviada",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                ("data_envio", models.DateField(blank=True, null=True)),
                ("data_retorno", models.DateField(blank=True, null=True)),
                ("status2", models.CharField(blank=True, max_length=50)),
                ("atraso_em_dias", models.IntegerField(blank=True, null=True)),
                ("ip", models.IntegerField(blank=True, null=True)),
                ("observacao", models.TextField(blank=True)),
                ("lead_time", models.PositiveIntegerField(blank=True, null=True)),
                ("previsao_entrega", models.DateField(blank=True, null=True)),
                (
                    "data_negociada",
                    models.DateField(
                        blank=True, null=True, verbose_name="Data Negociada"
                    ),
                ),
                (
                    "total",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("atualizado_em", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="FornecedorQualificado",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nome", models.CharField(max_length=255)),
                (
                    "produto_servico",
                    models.CharField(
                        choices=[
                            ("Fita de Aço/Inox", "Fita de Aço/Inox"),
                            ("Arame de Aço", "Arame de Aço"),
                            ("Arame de inox", "Arame de inox"),
                            ("Calibração", "Calibração"),
                            ("Trat. Superficial", "Trat. Superficial"),
                            ("Material do Cliente", "Material do Cliente"),
                        ],
                        max_length=50,
                    ),
                ),
                ("data_homologacao", models.DateField(blank=True, null=True)),
                (
                    "ativo",
                    models.CharField(
                        choices=[("Ativo", "Ativo"), ("Inativo", "Inativo")],
                        default="Ativo",
                        max_length=10,
                        verbose_name="Status do Fornecedor",
                    ),
                ),
                (
                    "tipo_certificacao",
                    models.CharField(
                        choices=[
                            ("ISO 9001", "ISO 9001"),
                            ("IATF16949", "IATF16949"),
                            ("NBR-ISO 17025 RBC", "NBR-ISO 17025 RBC"),
                            ("AUDITORIA", "AUDITORIA"),
                        ],
                        max_length=30,
                    ),
                ),
                ("vencimento_certificacao", models.DateField(blank=True, null=True)),
                (
                    "risco",
                    models.CharField(
                        blank=True,
                        choices=[("Baixo", "Baixo"), ("Alto", "Alto"), ("N/A", "N/A")],
                        max_length=10,
                    ),
                ),
                ("data_avaliacao_risco", models.DateField(blank=True, null=True)),
                ("proxima_avaliacao_risco", models.DateField(blank=True, null=True)),
                (
                    "tipo_formulario",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Processo (F154)", "Processo (F154)"),
                            ("CQI-11", "CQI-11"),
                            ("CQI-12", "CQI-12"),
                            ("CQI-9", "CQI-9"),
                            ("N/A", "N/A"),
                        ],
                        max_length=20,
                    ),
                ),
                ("data_auditoria", models.DateField(blank=True, null=True)),
                ("proxima_auditoria", models.DateField(blank=True, null=True)),
                ("nota_auditoria", models.FloatField(blank=True, null=True)),
                ("classe_frequencia", models.CharField(blank=True, max_length=10)),
                ("status", models.CharField(blank=True, max_length=30)),
                ("score", models.FloatField(blank=True, null=True)),
                ("especialista_nome", models.CharField(blank=True, max_length=100)),
                ("especialista_cargo", models.CharField(blank=True, max_length=100)),
                ("especialista_contato", models.CharField(blank=True, max_length=100)),
                (
                    "certificado_anexo",
                    models.FileField(
                        blank=True, null=True, upload_to="certificados/fornecedores/"
                    ),
                ),
                (
                    "lead_time",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Lead Time (dias)"
                    ),
                ),
                ("atualizado_em", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="MateriaPrimaCatalogo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("codigo", models.CharField(max_length=50, unique=True)),
                ("descricao", models.TextField()),
                (
                    "localizacao",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("classe", models.CharField(blank=True, max_length=50, null=True)),
                ("bitola", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "largura",
                    models.CharField(
                        blank=True, max_length=20, null=True, verbose_name="Largura"
                    ),
                ),
                (
                    "tipo",
                    models.CharField(
                        choices=[
                            ("Materia-Prima", "Matéria-Prima"),
                            ("Tratamento", "Tratamento"),
                        ],
                        default="Materia-Prima",
                        max_length=50,
                    ),
                ),
                (
                    "tipo_abnt",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Tipo ABNT"
                    ),
                ),
                (
                    "tolerancia",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="Tolerância"
                    ),
                ),
                (
                    "tolerancia_largura",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Tolerância Largura",
                    ),
                ),
                (
                    "tipo_material",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Tipo de Material",
                    ),
                ),
                ("atualizado_em", models.DateTimeField(auto_now=True)),
                ("criado_em", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="NormaTecnica",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nome_norma",
                    models.CharField(max_length=100, verbose_name="Nome da Norma"),
                ),
                (
                    "arquivo_norma",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="normas/",
                        verbose_name="Arquivo (PDF)",
                    ),
                ),
                (
                    "vinculo_norma",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Norma vinculada (tração)",
                    ),
                ),
                (
                    "aprovada",
                    models.BooleanField(
                        default=False, verbose_name="Norma aprovada para uso?"
                    ),
                ),
                (
                    "aprovado_em",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Data da aprovação"
                    ),
                ),
                (
                    "aprovado_por",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="normas_aprovadas",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Aprovado por",
                    ),
                ),
            ],
            options={
                "verbose_name": "Norma Técnica",
                "verbose_name_plural": "Normas Técnicas",
            },
        ),
        migrations.CreateModel(
            name="RelacaoMateriaPrima",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nro_relatorio",
                    models.PositiveIntegerField(blank=True, null=True, unique=True),
                ),
                ("data_entrada", models.DateField(verbose_name="Data de Entrada")),
                (
                    "nota_fiscal",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="N. Fiscal"
                    ),
                ),
                (
                    "numero_certificado",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="N° do Certificado",
                    ),
                ),
                (
                    "item_seguranca",
                    models.BooleanField(
                        choices=[(True, "Sim"), (False, "Não")],
                        default=False,
                        verbose_name="Item Segurança",
                    ),
                ),
                (
                    "material_cliente",
                    models.BooleanField(
                        choices=[(True, "Sim"), (False, "Não")],
                        default=False,
                        verbose_name="Material do Cliente",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Aguardando F045", "Aguardando F045"),
                            ("Aprovado", "Aprovado"),
                            ("Aprovado Condicionalmente", "Aprovado Condicionalmente"),
                            ("Reprovado", "Reprovado"),
                        ],
                        max_length=30,
                        null=True,
                        verbose_name="Status",
                    ),
                ),
                (
                    "data_prevista_entrega",
                    models.DateField(
                        blank=True, null=True, verbose_name="Data Prevista de Entrega"
                    ),
                ),
                (
                    "data_renegociada_entrega",
                    models.DateField(
                        blank=True,
                        null=True,
                        verbose_name="Data de Entrega / Renegociação",
                    ),
                ),
                (
                    "atraso_em_dias",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Atraso em dias"
                    ),
                ),
                (
                    "demerito_ip",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Demérito (IP)"
                    ),
                ),
                (
                    "anexo_certificado",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="certificados/materia_prima/",
                        verbose_name="Anexo do Certificado",
                    ),
                ),
                (
                    "anexo_f045",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="relatorios/f045/",
                        verbose_name="Relatório F045 Gerado",
                    ),
                ),
                ("criado_em", models.DateTimeField(auto_now_add=True)),
                ("atualizado_em", models.DateTimeField(auto_now=True)),
                (
                    "fornecedor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="qualidade_fornecimento.fornecedorqualificado",
                        verbose_name="Fornecedor",
                    ),
                ),
                (
                    "materia_prima",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="qualidade_fornecimento.materiaprimacatalogo",
                        verbose_name="Matéria-Prima",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RoloMateriaPrima",
            fields=[
                (
                    "nro_rolo",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        primary_key=True,
                        serialize=False,
                        verbose_name="N° do Rolo",
                    ),
                ),
                (
                    "peso",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Peso",
                    ),
                ),
                (
                    "tracao",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=6,
                        null=True,
                        verbose_name="Resistência à Tração",
                    ),
                ),
                (
                    "dureza",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=6,
                        null=True,
                        verbose_name="Dureza",
                    ),
                ),
                (
                    "bitola_espessura",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=6,
                        null=True,
                        verbose_name="Espessura",
                    ),
                ),
                (
                    "bitola_largura",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=6,
                        null=True,
                        verbose_name="Largura",
                    ),
                ),
                (
                    "enrolamento",
                    models.CharField(
                        blank=True,
                        choices=[("OK", "OK"), ("NOK", "NOK")],
                        max_length=10,
                    ),
                ),
                (
                    "dobramento",
                    models.CharField(
                        blank=True,
                        choices=[("OK", "OK"), ("NOK", "NOK")],
                        max_length=10,
                    ),
                ),
                (
                    "torcao_residual",
                    models.CharField(
                        blank=True,
                        choices=[("OK", "OK"), ("NOK", "NOK")],
                        max_length=10,
                    ),
                ),
                (
                    "aspecto_visual",
                    models.CharField(
                        blank=True,
                        choices=[("OK", "OK"), ("NOK", "NOK")],
                        max_length=10,
                    ),
                ),
                (
                    "alongamento",
                    models.CharField(
                        blank=True,
                        choices=[("OK", "OK"), ("NOK", "NOK")],
                        max_length=10,
                        verbose_name="Alongamento",
                    ),
                ),
                (
                    "flechamento",
                    models.CharField(
                        blank=True,
                        choices=[("OK", "OK"), ("NOK", "NOK")],
                        max_length=10,
                        verbose_name="Flechamento",
                    ),
                ),
                ("laudo", models.CharField(default="Aguardando", max_length=20)),
                (
                    "tb050",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rolos",
                        to="qualidade_fornecimento.relacaomateriaprima",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RetornoDiario",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("data", models.DateField()),
                ("quantidade", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "servico",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="retornos",
                        to="qualidade_fornecimento.controleservicoexterno",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RelatorioF045",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nro_relatorio", models.PositiveIntegerField(editable=False)),
                ("fornecedor", models.CharField(editable=False, max_length=120)),
                ("nota_fiscal", models.CharField(editable=False, max_length=50)),
                ("numero_certificado", models.CharField(editable=False, max_length=50)),
                ("material", models.CharField(editable=False, max_length=200)),
                ("bitola", models.CharField(max_length=30)),
                ("qtd_rolos", models.PositiveIntegerField(editable=False)),
                (
                    "massa_liquida",
                    models.DecimalField(
                        decimal_places=2, editable=False, max_digits=10
                    ),
                ),
                ("qtd_carreteis", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "pedido_compra",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "c_user",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        max_digits=7,
                        null=True,
                        verbose_name="C\u202f(%)",
                    ),
                ),
                (
                    "mn_user",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        max_digits=7,
                        null=True,
                        verbose_name="Mn\u202f(%)",
                    ),
                ),
                (
                    "si_user",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        max_digits=7,
                        null=True,
                        verbose_name="Si\u202f(%)",
                    ),
                ),
                (
                    "p_user",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        max_digits=7,
                        null=True,
                        verbose_name="P\u202f(%)",
                    ),
                ),
                (
                    "s_user",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        max_digits=7,
                        null=True,
                        verbose_name="S\u202f(%)",
                    ),
                ),
                (
                    "cr_user",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        max_digits=7,
                        null=True,
                        verbose_name="Cr\u202f(%)",
                    ),
                ),
                (
                    "ni_user",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        max_digits=7,
                        null=True,
                        verbose_name="Ni\u202f(%)",
                    ),
                ),
                (
                    "cu_user",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        max_digits=7,
                        null=True,
                        verbose_name="Cu\u202f(%)",
                    ),
                ),
                (
                    "al_user",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        max_digits=7,
                        null=True,
                        verbose_name="Al\u202f(%)",
                    ),
                ),
                (
                    "laudo_composicao",
                    models.CharField(
                        blank=True,
                        choices=[("Ap", "Aprovado"), ("Re", "Reprovado")],
                        editable=False,
                        max_length=2,
                        verbose_name="Laudo – composição",
                    ),
                ),
                (
                    "laudo_interno",
                    models.CharField(
                        blank=True,
                        choices=[("Ap", "Aprovado"), ("Re", "Reprovado")],
                        editable=False,
                        max_length=2,
                        verbose_name="Laudo – características internas",
                    ),
                ),
                (
                    "observacoes",
                    models.TextField(blank=True, max_length=1200, null=True),
                ),
                (
                    "resistencia_tracao",
                    models.CharField(
                        blank=True, default="N/A", max_length=50, null=True
                    ),
                ),
                (
                    "escoamento",
                    models.CharField(
                        blank=True, default="N/A", max_length=50, null=True
                    ),
                ),
                (
                    "alongamento",
                    models.CharField(
                        blank=True, default="N/A", max_length=50, null=True
                    ),
                ),
                (
                    "estriccao",
                    models.CharField(
                        blank=True, default="N/A", max_length=50, null=True
                    ),
                ),
                (
                    "torcao_certificado",
                    models.CharField(
                        blank=True, default="N/A", max_length=50, null=True
                    ),
                ),
                (
                    "dureza_certificado",
                    models.CharField(
                        blank=True,
                        default="N/A",
                        max_length=50,
                        null=True,
                        verbose_name="Dureza (certificado)",
                    ),
                ),
                (
                    "status_geral",
                    models.CharField(blank=True, editable=False, max_length=30),
                ),
                ("assinado_em", models.DateTimeField(auto_now_add=True)),
                (
                    "data_assinatura",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Data da assinatura"
                    ),
                ),
                (
                    "assinatura_nome",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="Nome da assinatura",
                    ),
                ),
                (
                    "assinatura_cn",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="CN da assinatura (email)",
                    ),
                ),
                (
                    "relacao",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="f045",
                        to="qualidade_fornecimento.relacaomateriaprima",
                    ),
                ),
                (
                    "usuario",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Relatório F‑045",
                "verbose_name_plural": "Relatórios F‑045",
            },
        ),
        migrations.CreateModel(
            name="NormaTracao",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tipo_abnt",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Tipo ABNT"
                    ),
                ),
                (
                    "bitola_minima",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=6,
                        null=True,
                        verbose_name="Bitola mín (mm)",
                    ),
                ),
                (
                    "bitola_maxima",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=6,
                        null=True,
                        verbose_name="Bitola máx (mm)",
                    ),
                ),
                (
                    "resistencia_min",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=8,
                        null=True,
                        verbose_name="R. tração mín (Kgf/mm²)",
                    ),
                ),
                (
                    "resistencia_max",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=8,
                        null=True,
                        verbose_name="R. tração máx (Kgf/mm²)",
                    ),
                ),
                (
                    "dureza",
                    models.DecimalField(
                        blank=True,
                        decimal_places=0,
                        max_digits=6,
                        null=True,
                        verbose_name="Dureza (HR)",
                    ),
                ),
                (
                    "norma",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tracoes",
                        to="qualidade_fornecimento.normatecnica",
                    ),
                ),
            ],
            options={
                "verbose_name": "Faixa de Tração",
                "verbose_name_plural": "Faixas de Tração",
            },
        ),
        migrations.CreateModel(
            name="NormaComposicaoElemento",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tipo_abnt",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Tipo de Aço ABNT",
                    ),
                ),
                (
                    "c_min",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=5,
                        null=True,
                        verbose_name="C mín (%)",
                    ),
                ),
                (
                    "c_max",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=5,
                        null=True,
                        verbose_name="C máx (%)",
                    ),
                ),
                (
                    "mn_min",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=5,
                        null=True,
                        verbose_name="Mn mín (%)",
                    ),
                ),
                (
                    "mn_max",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=5,
                        null=True,
                        verbose_name="Mn máx (%)",
                    ),
                ),
                (
                    "si_min",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=5,
                        null=True,
                        verbose_name="Si mín (%)",
                    ),
                ),
                (
                    "si_max",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=5,
                        null=True,
                        verbose_name="Si máx (%)",
                    ),
                ),
                (
                    "p_min",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=5,
                        null=True,
                        verbose_name="P mín (%)",
                    ),
                ),
                (
                    "p_max",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=5,
                        null=True,
                        verbose_name="P máx (%)",
                    ),
                ),
                (
                    "s_min",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=5,
                        null=True,
                        verbose_name="S mín (%)",
                    ),
                ),
                (
                    "s_max",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=5,
                        null=True,
                        verbose_name="S máx (%)",
                    ),
                ),
                (
                    "cr_min",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=5,
                        null=True,
                        verbose_name="Cr mín (%)",
                    ),
                ),
                (
                    "cr_max",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=5,
                        null=True,
                        verbose_name="Cr máx (%)",
                    ),
                ),
                (
                    "ni_min",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=5,
                        null=True,
                        verbose_name="Ni mín (%)",
                    ),
                ),
                (
                    "ni_max",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=5,
                        null=True,
                        verbose_name="Ni máx (%)",
                    ),
                ),
                (
                    "cu_min",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=5,
                        null=True,
                        verbose_name="Cu mín (%)",
                    ),
                ),
                (
                    "cu_max",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=5,
                        null=True,
                        verbose_name="Cu máx (%)",
                    ),
                ),
                (
                    "al_min",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=5,
                        null=True,
                        verbose_name="Al mín (%)",
                    ),
                ),
                (
                    "al_max",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=5,
                        null=True,
                        verbose_name="Al máx (%)",
                    ),
                ),
                (
                    "norma",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="elementos",
                        to="qualidade_fornecimento.normatecnica",
                    ),
                ),
            ],
            options={
                "verbose_name": "Composição Química (por tipo ABNT)",
                "verbose_name_plural": "Composições Químicas",
            },
        ),
        migrations.AddField(
            model_name="materiaprimacatalogo",
            name="norma",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="materias_primas",
                to="qualidade_fornecimento.normatecnica",
                verbose_name="Norma",
            ),
        ),
        migrations.CreateModel(
            name="InspecaoServicoExterno",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("certificado_numero", models.CharField(max_length=100)),
                (
                    "certificado_anexo",
                    models.FileField(
                        blank=True, null=True, upload_to="certificados_servico_externo/"
                    ),
                ),
                (
                    "inspecao_visual",
                    models.CharField(
                        choices=[("OK", "OK"), ("NOK", "NOK")], max_length=10
                    ),
                ),
                (
                    "espessura_camada",
                    models.CharField(
                        choices=[("OK", "OK"), ("NOK", "NOK")], max_length=10
                    ),
                ),
                (
                    "salt_spray",
                    models.CharField(
                        choices=[("OK", "OK"), ("NOK", "NOK")], max_length=10
                    ),
                ),
                ("aprovado_condicionalmente", models.BooleanField(default=False)),
                ("observacoes", models.TextField(blank=True, null=True)),
                (
                    "pdf",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="inspecao_servico_externo_pdfs/",
                    ),
                ),
                (
                    "assinatura_nome",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "assinatura_email",
                    models.EmailField(blank=True, max_length=254, null=True),
                ),
                ("assinatura_data", models.DateTimeField(blank=True, null=True)),
                ("criado_em", models.DateTimeField(auto_now_add=True)),
                ("atualizado_em", models.DateTimeField(auto_now=True)),
                (
                    "servico",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="inspecao",
                        to="qualidade_fornecimento.controleservicoexterno",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Inspecao10",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "numero_op",
                    models.CharField(
                        default="000000", max_length=20, verbose_name="Nº OP"
                    ),
                ),
                (
                    "data",
                    models.DateField(
                        default=django.utils.timezone.now, verbose_name="Data"
                    ),
                ),
                (
                    "hora_inicio",
                    models.TimeField(
                        default=datetime.time(0, 0), verbose_name="Hora - Início"
                    ),
                ),
                (
                    "hora_fim",
                    models.TimeField(
                        default=datetime.time(0, 0), verbose_name="Hora - Fim"
                    ),
                ),
                (
                    "tempo_gasto",
                    models.DurationField(
                        blank=True, null=True, verbose_name="Tempo Gasto"
                    ),
                ),
                (
                    "quantidade_total",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Quantidade Total"
                    ),
                ),
                (
                    "quantidade_nok",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Quantidade Não OK"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True, editable=False, max_length=30, verbose_name="Status"
                    ),
                ),
                (
                    "observacoes",
                    models.TextField(blank=True, verbose_name="Observações"),
                ),
                ("criado_em", models.DateTimeField(auto_now_add=True)),
                (
                    "disposicao",
                    models.CharField(
                        choices=[("Sucatear", "Sucatear"), ("Devolver", "Devolver")],
                        default="Sucatear",
                        max_length=20,
                        verbose_name="Disposição",
                    ),
                ),
                (
                    "codigo_brasmol",
                    models.ForeignKey(
                        blank=True,
                        limit_choices_to={"tipo": "Tratamento"},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="qualidade_fornecimento.materiaprimacatalogo",
                        verbose_name="Código Bras-Mol",
                    ),
                ),
                (
                    "fornecedor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="qualidade_fornecimento.fornecedorqualificado",
                    ),
                ),
                (
                    "responsavel",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Inspeção 10",
                "verbose_name_plural": "Inspeções 10",
            },
        ),
        migrations.CreateModel(
            name="DevolucaoServicoExterno",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantidade", models.DecimalField(decimal_places=2, max_digits=10)),
                ("criado_em", models.DateTimeField(auto_now_add=True)),
                ("baixado_em", models.DateTimeField(blank=True, null=True)),
                (
                    "inspecao",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="qualidade_fornecimento.inspecao10",
                    ),
                ),
                (
                    "servico",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="qualidade_fornecimento.controleservicoexterno",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="controleservicoexterno",
            name="codigo_bm",
            field=models.ForeignKey(
                limit_choices_to={"tipo": "Tratamento"},
                on_delete=django.db.models.deletion.PROTECT,
                to="qualidade_fornecimento.materiaprimacatalogo",
            ),
        ),
        migrations.AddField(
            model_name="controleservicoexterno",
            name="fornecedor",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="servicos_externos",
                to="qualidade_fornecimento.fornecedorqualificado",
            ),
        ),
    ]
