# Generated by Django 4.2.16 on 2025-04-03 11:25

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("qualidade_fornecimento", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="AnaliseRiscoPreliminar",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tipo_fornecedor", models.CharField(blank=True, max_length=100)),
                ("criterio_a", models.PositiveIntegerField(verbose_name="Critério A")),
                ("criterio_b", models.PositiveIntegerField(verbose_name="Critério B")),
                ("criterio_c", models.PositiveIntegerField(verbose_name="Critério C")),
                ("criterio_d", models.PositiveIntegerField(verbose_name="Critério D")),
                ("criterio_e", models.PositiveIntegerField(verbose_name="Critério E")),
                ("criterio_f", models.PositiveIntegerField(verbose_name="Critério F")),
                (
                    "media_risco",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=4, null=True
                    ),
                ),
                ("classificacao_risco", models.CharField(blank=True, max_length=50)),
                ("auditoria_segunda_parte", models.BooleanField(default=False)),
                (
                    "eficaz",
                    models.CharField(
                        blank=True,
                        help_text="Resultado da análise ou ação corretiva",
                        max_length=100,
                    ),
                ),
                (
                    "data_realizada",
                    models.DateField(
                        blank=True, null=True, verbose_name="Data da última análise"
                    ),
                ),
                (
                    "data_planejada",
                    models.DateField(
                        blank=True, null=True, verbose_name="Data da próxima análise"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AvaliacaoFornecedorMP",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("data_inicio", models.DateField()),
                ("data_fim", models.DateField()),
                (
                    "pontuacao",
                    models.DecimalField(
                        decimal_places=2, max_digits=4, verbose_name="Pontuação (score)"
                    ),
                ),
                (
                    "iqs",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=4,
                        null=True,
                        verbose_name="IQS",
                    ),
                ),
                (
                    "ip",
                    models.DecimalField(
                        decimal_places=2, max_digits=4, verbose_name="Pontualidade - IP"
                    ),
                ),
                (
                    "iqf",
                    models.DecimalField(
                        decimal_places=2, max_digits=4, verbose_name="Qualidade - IQF"
                    ),
                ),
                (
                    "iqg",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=4,
                        null=True,
                        verbose_name="IQG - Índice Global",
                    ),
                ),
                (
                    "classificacao",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("A - Qualificado", "A - Qualificado"),
                            (
                                "B - Qualificado Condicionalmente",
                                "B - Qualificado Condicionalmente",
                            ),
                            ("C - Não Qualificado", "C - Não Qualificado"),
                        ],
                        max_length=50,
                    ),
                ),
                ("mes_referencia", models.CharField(max_length=10)),
                ("ano_referencia", models.CharField(max_length=4)),
            ],
        ),
        migrations.CreateModel(
            name="AvaliacaoFornecedorServico",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("data_inicio", models.DateField()),
                ("data_fim", models.DateField()),
                (
                    "pontuacao",
                    models.DecimalField(
                        decimal_places=2, max_digits=4, verbose_name="Pontuação (score)"
                    ),
                ),
                (
                    "iqs",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=4,
                        null=True,
                        verbose_name="IQS",
                    ),
                ),
                (
                    "ip",
                    models.DecimalField(
                        decimal_places=2, max_digits=4, verbose_name="Pontualidade - IP"
                    ),
                ),
                (
                    "iqf",
                    models.DecimalField(
                        decimal_places=2, max_digits=4, verbose_name="Qualidade - IQF"
                    ),
                ),
                (
                    "iqg",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=4,
                        null=True,
                        verbose_name="IQG - Índice Global",
                    ),
                ),
                (
                    "classificacao",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("A - Qualificado", "A - Qualificado"),
                            (
                                "B - Qualificado Condicionalmente",
                                "B - Qualificado Condicionalmente",
                            ),
                            ("C - Não Qualificado", "C - Não Qualificado"),
                        ],
                        max_length=50,
                    ),
                ),
                ("mes_referencia", models.CharField(max_length=10)),
                ("ano_referencia", models.CharField(max_length=4)),
            ],
        ),
        migrations.CreateModel(
            name="ComposicaoQuimica",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("norma", models.CharField(max_length=100)),
                ("classe", models.CharField(max_length=100)),
                ("codigo_norma", models.CharField(editable=False, max_length=200)),
                (
                    "carbono_min",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=4, null=True
                    ),
                ),
                (
                    "carbono_max",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=4, null=True
                    ),
                ),
                (
                    "manganes_min",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=4, null=True
                    ),
                ),
                (
                    "manganes_max",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=4, null=True
                    ),
                ),
                (
                    "silicio_min",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=4, null=True
                    ),
                ),
                (
                    "silicio_max",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=4, null=True
                    ),
                ),
                (
                    "fosforo_min",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=4, null=True
                    ),
                ),
                (
                    "fosforo_max",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=4, null=True
                    ),
                ),
                (
                    "enxofre_min",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=4, null=True
                    ),
                ),
                (
                    "enxofre_max",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=4, null=True
                    ),
                ),
                (
                    "cromo_min",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=4, null=True
                    ),
                ),
                (
                    "cromo_max",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=4, null=True
                    ),
                ),
                (
                    "niquel_min",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=4, null=True
                    ),
                ),
                (
                    "niquel_max",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=4, null=True
                    ),
                ),
                (
                    "cobre_min",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=4, null=True
                    ),
                ),
                (
                    "cobre_max",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=4, null=True
                    ),
                ),
                (
                    "aluminio_min",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=4, null=True
                    ),
                ),
                (
                    "aluminio_max",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=4, null=True
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FornecedorQualificado",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nome", models.CharField(max_length=255)),
                (
                    "produto_servico",
                    models.CharField(
                        choices=[
                            ("Fita de Aço/Inox", "Fita de Aço/Inox"),
                            ("Aço Inox", "Aço Inox"),
                            ("Arame de inox", "Arame de inox"),
                            ("Calibração", "Calibração"),
                            ("Trat. Superficial", "Trat. Superficial"),
                        ],
                        max_length=50,
                    ),
                ),
                ("data_homologacao", models.DateField()),
                (
                    "tipo_certificacao",
                    models.CharField(
                        choices=[
                            ("ISO 9001", "ISO 9001"),
                            ("IATF16949", "IATF16949"),
                            ("NBR-ISO 17025 RBC", "NBR-ISO 17025 RBC"),
                            ("AUDITORIA", "AUDITORIA"),
                        ],
                        max_length=30,
                    ),
                ),
                ("vencimento_certificacao", models.DateField()),
                (
                    "risco",
                    models.CharField(
                        choices=[("Baixo", "Baixo"), ("Alto", "Alto"), ("N/A", "N/A")],
                        max_length=10,
                    ),
                ),
                ("data_avaliacao_risco", models.DateField()),
                ("proxima_avaliacao_risco", models.DateField()),
                (
                    "tipo_formulario",
                    models.CharField(
                        choices=[
                            ("Processo (F154)", "Processo (F154)"),
                            ("CQI-11", "CQI-11"),
                            ("CQI-12", "CQI-12"),
                            ("CQI-9", "CQI-9"),
                            ("N/A", "N/A"),
                        ],
                        max_length=20,
                    ),
                ),
                ("data_auditoria", models.DateField()),
                ("proxima_auditoria", models.DateField()),
                ("nota_auditoria", models.FloatField()),
                ("classe_frequencia", models.CharField(blank=True, max_length=10)),
                ("status", models.CharField(blank=True, max_length=30)),
                ("score", models.FloatField(blank=True, null=True)),
                ("especialista_nome", models.CharField(blank=True, max_length=100)),
                ("especialista_contato", models.CharField(blank=True, max_length=100)),
                (
                    "solicita_certificado_fisico",
                    models.CharField(
                        choices=[("Sim", "Sim"), ("Não", "Não")], max_length=3
                    ),
                ),
                (
                    "email_envio_certificado",
                    models.EmailField(blank=True, max_length=254, null=True),
                ),
                (
                    "certificado_anexo",
                    models.FileField(
                        blank=True, null=True, upload_to="certificados/fornecedores/"
                    ),
                ),
                ("atualizado_em", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="MateriaPrima",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "num_relatorio",
                    models.PositiveIntegerField(editable=False, unique=True),
                ),
                ("num_rolo", models.PositiveIntegerField(editable=False, unique=True)),
                ("data_entrada", models.DateField()),
                ("fornecedor", models.CharField(max_length=255)),
                ("nota_fiscal", models.CharField(max_length=50)),
                ("num_certificado", models.CharField(max_length=100)),
                ("codigo", models.CharField(max_length=50)),
                ("descricao", models.CharField(max_length=255)),
                ("bitola", models.CharField(blank=True, max_length=50)),
                ("classe", models.CharField(max_length=100)),
                (
                    "status",
                    models.CharField(
                        choices=[("Aprovado", "Aprovado"), ("Reprovado", "Reprovado")],
                        max_length=20,
                    ),
                ),
                ("data_prevista_entrega", models.DateField(blank=True, null=True)),
                ("data_entrega_renegociada", models.DateField(blank=True, null=True)),
                ("atraso_dias", models.IntegerField(blank=True, null=True)),
                (
                    "ip",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Demérito (IP)"
                    ),
                ),
                (
                    "anexo_certificado",
                    models.FileField(
                        blank=True, null=True, upload_to="certificados_mp/"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ServicoExterno",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pedido", models.CharField(max_length=100)),
                (
                    "codigo_bm",
                    models.CharField(max_length=100, verbose_name="Código da Peça"),
                ),
                ("fornecedor", models.CharField(max_length=255)),
                (
                    "lead_time",
                    models.PositiveIntegerField(help_text="Prazo de entrega em dias"),
                ),
                (
                    "quantidade_enviada",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                ("data_envio", models.DateField()),
                (
                    "status",
                    models.CharField(
                        choices=[("Ok", "Ok"), ("Nok", "Nok")], max_length=10
                    ),
                ),
                ("data_retorno", models.DateField(blank=True, null=True)),
                (
                    "dias",
                    models.JSONField(default=dict, verbose_name="Retornos Diários"),
                ),
                (
                    "total_retornado",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "status2",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("OK", "OK"),
                            ("Atenção Saldo", "Atenção Saldo"),
                            ("Saldo maior que o enviado", "Saldo maior que o enviado"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "iqf",
                    models.CharField(
                        blank=True,
                        choices=[("Aprovado", "Aprovado"), ("Reprovado", "Reprovado")],
                        max_length=20,
                        null=True,
                    ),
                ),
                ("prev_entrega", models.DateField(blank=True, null=True)),
                ("atraso_dias", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "ip",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Índice de Pontualidade"
                    ),
                ),
                ("observacao", models.TextField(blank=True)),
            ],
        ),
        migrations.DeleteModel(
            name="Fornecedor",
        ),
        migrations.AddField(
            model_name="avaliacaofornecedorservico",
            name="fornecedor",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="qualidade_fornecimento.fornecedorqualificado",
            ),
        ),
        migrations.AddField(
            model_name="avaliacaofornecedormp",
            name="fornecedor",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="qualidade_fornecimento.fornecedorqualificado",
            ),
        ),
        migrations.AddField(
            model_name="analiseriscopreliminar",
            name="fornecedor",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="qualidade_fornecimento.fornecedorqualificado",
            ),
        ),
    ]
