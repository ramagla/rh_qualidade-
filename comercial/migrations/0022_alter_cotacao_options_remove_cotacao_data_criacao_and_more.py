# Generated by Django 4.2.16 on 2025-06-18 18:35

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_ckeditor_5.fields


class Migration(migrations.Migration):

    dependencies = [
        ("tecnico", "0007_propriedadesetapa_ferramenta"),
        (
            "qualidade_fornecimento",
            "0085_inspecaoservicoexterno_assinatura_data_and_more",
        ),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("comercial", "0021_item_codigo_desenho"),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="cotacao",
            options={"verbose_name": "Cotação", "verbose_name_plural": "Cotações"},
        ),
        migrations.RemoveField(
            model_name="cotacao",
            name="data_criacao",
        ),
        migrations.RemoveField(
            model_name="cotacao",
            name="titulo",
        ),
        migrations.AddField(
            model_name="cotacao",
            name="cliente",
            field=models.ForeignKey(
                default=1,
                on_delete=django.db.models.deletion.PROTECT,
                to="comercial.cliente",
                verbose_name="Cliente",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="cotacao",
            name="cond_pagamento",
            field=models.CharField(
                default="",
                max_length=100,
                verbose_name="Condição de Pagamento"
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="cotacao",
            name="created_at",
            field=models.DateTimeField(
                auto_now_add=True,
                default=django.utils.timezone.now,
                verbose_name="Criado em",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="cotacao",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(class)s_created",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Criado por",
            ),
        ),
        migrations.AddField(
            model_name="cotacao",
            name="data_abertura",
            field=models.DateTimeField(
                default=django.utils.timezone.now,
                verbose_name="Data de Abertura"
            ),
        ),
        migrations.AddField(
            model_name="cotacao",
            name="frete",
            field=models.CharField(
                choices=[("CIF", "CIF"), ("FOB", "FOB")],
                default="CIF",
                max_length=3,
                verbose_name="Frete",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="cotacao",
            name="icms",
            field=models.DecimalField(
                decimal_places=2,
                default=0.00,
                max_digits=5,
                verbose_name="ICMS (%)",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="cotacao",
            name="responsavel",
            field=models.ForeignKey(
                default=1,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="cotacoes",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Responsável",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="cotacao",
            name="tipo",
            field=models.CharField(
                choices=[("Atualização", "Atualização"), ("Novo", "Novo")],
                default="Atualização",
                max_length=12,
                verbose_name="Tipo de Cotação",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="cotacao",
            name="updated_at",
            field=models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
        ),
        migrations.AddField(
            model_name="cotacao",
            name="updated_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(class)s_updated",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Atualizado por",
            ),
        ),
        migrations.AlterField(
            model_name="cotacao",
            name="observacoes",
            field=django_ckeditor_5.fields.CKEditor5Field(
                blank=True, null=True, verbose_name="Observações"
            ),
        ),
        migrations.CreateModel(
            name="RoteiroCotacao",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                ("etapa", models.PositiveIntegerField(verbose_name="Etapa Nº")),
                (
                    "nome_acao",
                    models.CharField(max_length=100, verbose_name="Nome da Ação"),
                ),
                (
                    "pph",
                    models.DecimalField(
                        decimal_places=4, max_digits=10, verbose_name="Peças por Hora"
                    ),
                ),
                (
                    "setup_minutos",
                    models.PositiveIntegerField(verbose_name="Tempo de Setup (min)"),
                ),
                (
                    "custo_hora",
                    models.DecimalField(
                        decimal_places=4, max_digits=12, verbose_name="Custo Hora"
                    ),
                ),
                (
                    "custo_total",
                    models.DecimalField(
                        decimal_places=4, max_digits=14, verbose_name="Custo Total"
                    ),
                ),
                (
                    "cotacao",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="roteiro_cotacao",
                        to="comercial.cotacao",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Criado por",
                    ),
                ),
                (
                    "setor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="comercial.centrodecusto",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Atualizado por",
                    ),
                ),
            ],
            options={
                "verbose_name": "Roteiro na Cotação",
                "verbose_name_plural": "Roteiros na Cotação",
            },
        ),
        migrations.CreateModel(
            name="RegrasCalculo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "icms",
                    models.DecimalField(
                        decimal_places=2, max_digits=5, verbose_name="ICMS (%)"
                    ),
                ),
                (
                    "pis",
                    models.DecimalField(
                        decimal_places=2, max_digits=5, verbose_name="PIS (%)"
                    ),
                ),
                (
                    "confins",
                    models.DecimalField(
                        decimal_places=2, max_digits=5, verbose_name="Cofins (%)"
                    ),
                ),
                (
                    "ir",
                    models.DecimalField(
                        decimal_places=2, max_digits=5, verbose_name="IR (%)"
                    ),
                ),
                (
                    "csll",
                    models.DecimalField(
                        decimal_places=2, max_digits=5, verbose_name="CSLL (%)"
                    ),
                ),
                (
                    "df",
                    models.DecimalField(
                        decimal_places=2, max_digits=5, verbose_name="DF (%)"
                    ),    
                ),
                (
                    "dv",
                    models.DecimalField(
                        decimal_places=2, max_digits=5, verbose_name="DV (%)"
                    ),
                ),
                (
                    "cotacao",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="regras_calculo",
                        to="comercial.cotacao",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Criado por",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Atualizado por",
                    ),
                ),
            ],
            options={
                "verbose_name": "Regras de Cálculo",
                "verbose_name_plural": "Regras de Cálculo",
            },
        ),
        migrations.CreateModel(
            name="PreCalculoServicoExterno",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                ("codigo", models.CharField(max_length=50, verbose_name="Código")),
                (
                    "lote_minimo",
                    models.PositiveIntegerField(verbose_name="Lote Mínimo"),
                ),
                (
                    "entrega_dias",
                    models.PositiveIntegerField(verbose_name="Entrega (dias)"),
                ),
                (
                    "desenvolvido_mm",
                    models.DecimalField(
                        decimal_places=2, max_digits=8, verbose_name="Desenvolvido (mm)"
                    ),
                ),
                (
                    "peso_liquido",
                    models.DecimalField(
                        decimal_places=3,
                        max_digits=10,
                        verbose_name="Peso Líquido (kg)",
                    ),
                ),
                (
                    "peso_bruto",
                    models.DecimalField(
                        decimal_places=3, max_digits=10, verbose_name="Peso Bruto (kg)"
                    ),
                ),
                (
                    "preco_kg",
                    models.DecimalField(
                        decimal_places=4, max_digits=12, verbose_name="Preço /kg"
                    ),
                ),
                (
                    "cotacao",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="servicos_externos_precalculo",
                        to="comercial.cotacao",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Criado por",
                    ),
                ),
                (
                    "etapa",
                    models.ForeignKey(
                        limit_choices_to={
                            "setor__nome__icontains": "Tratamento Externo"
                        },
                        on_delete=django.db.models.deletion.PROTECT,
                        to="tecnico.etaparoteiro",
                        verbose_name="Etapa (Tratamento Externo)",
                    ),
                ),
                (
                    "fornecedor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="qualidade_fornecimento.fornecedorqualificado",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Atualizado por",
                    ),
                ),
            ],
            options={
                "verbose_name": "Pré-Cálculo Serviço Externo",
                "verbose_name_plural": "Serviços Externos Pré-Cálculo",
            },
        ),
        migrations.CreateModel(
            name="PreCalculoMaterial",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                ("codigo", models.CharField(max_length=50, verbose_name="Código")),
                (
                    "lote_minimo",
                    models.PositiveIntegerField(verbose_name="Lote Mínimo"),
                ),
                (
                    "entrega_dias",
                    models.PositiveIntegerField(verbose_name="Entrega (dias)"),
                ),
                (
                    "desenvolvido_mm",
                    models.DecimalField(
                        decimal_places=2, max_digits=8, verbose_name="Desenvolvido (mm)"
                    ),
                ),
                (
                    "peso_liquido",
                    models.DecimalField(
                        decimal_places=3,
                        max_digits=10,
                        verbose_name="Peso Líquido (kg)",
                    ),
                ),
                (
                    "peso_bruto",
                    models.DecimalField(
                        decimal_places=3, max_digits=10, verbose_name="Peso Bruto (kg)"
                    ),
                ),
                (
                    "preco_kg",
                    models.DecimalField(
                        decimal_places=4, max_digits=12, verbose_name="Preço /kg"
                    ),
                ),                (
                    "observacoes",
                    django_ckeditor_5.fields.CKEditor5Field(
                        blank=True, null=True, verbose_name="Observações"
                    ),
                ),
                (
                    "cotacao",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="materiais_precalculo",
                        to="comercial.cotacao",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Criado por",
                    ),
                ),
                (
                    "fornecedor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="qualidade_fornecimento.fornecedorqualificado",
                    ),
                ),
                (
                    "roteiro",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="tecnico.roteiroproducao",
                        verbose_name="Roteiro de Produção",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Atualizado por",
                    ),
                ),
            ],
            options={
                "verbose_name": "Pré-Cálculo Matéria-Prima",
                "verbose_name_plural": "Materiais Pré-Cálculo",
            },
        ),
        migrations.CreateModel(
            name="Desenvolvimento",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True, serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "completo",
                    models.BooleanField(default=False, verbose_name="Tudo preenchido corretamente?"),
                ),
                (
                    "consideracoes",
                    django_ckeditor_5.fields.CKEditor5Field(
                        blank=True, null=True, verbose_name="Considerações Finais"
                    ),
                ),
                (
                    "cotacao",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="desenvolvimento",
                        to="comercial.cotacao",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Criado por",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Atualizado por",
                    ),
                ),
            ],
            options={
                "verbose_name": "Desenvolvimento da Cotação",
                "verbose_name_plural": "Desenvolvimentos da Cotação",
            },
        ),
        migrations.CreateModel(
            name="CotacaoFerramenta",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "observacoes",
                    django_ckeditor_5.fields.CKEditor5Field(
                        blank=True, null=True, verbose_name="Observações"
                    ),
                ),
                (
                    "cotacao",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ferramentas_cotacao",
                        to="comercial.cotacao",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Criado por",
                    ),
                ),
                (
                    "ferramenta",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="comercial.ferramenta",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Atualizado por",
                    ),
                ),
            ],
            options={
                "verbose_name": "Ferramenta na Cotação",
                "verbose_name_plural": "Ferramentas na Cotação",
            },
        ),
        migrations.CreateModel(
            name="AvaliacaoTecnica",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "campo1",
                    models.BooleanField(default=False, verbose_name="Pergunta Técnica 1"),
                ),
                (
                    "detalhe1",
                    models.CharField(blank=True, max_length=200, verbose_name="Detalhar Pergunta 1"),
                ),
                (
                    "cotacao",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="avaliacao_tecnica",
                        to="comercial.cotacao",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Criado por",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Atualizado por",
                    ),
                ),
            ],
            options={
                "verbose_name": "Avaliação Técnica",
                "verbose_name_plural": "Avaliações Técnicas",
            },
        ),
        migrations.CreateModel(
            name="AnaliseComercial",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "metodologia",
                    models.CharField(
                        choices=[
                            ("Não aplicável", "Não aplicável"),
                            ("PPAP Nível 1", "PPAP Nível 1"),
                            ("PPAP Nível 2", "PPAP Nível 2"),
                            ("PPAP Nível 3", "PPAP Nível 3"),
                            ("PPAP Nível 4", "PPAP Nível 4"),
                            ("PPAP Nível 5", "PPAP Nível 5"),
                        ],
                        max_length=30,
                        verbose_name="Metodologia de Aprovação",
                    ),
                ),
                (
                    "material_fornecido",
                    models.BooleanField(
                        default=False, verbose_name="Material fornecido pelo cliente"
                    ),
                ),
                (
                    "material_fornecido_obs",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Detalhar Material"
                    ),
                ),
                (
                    "requisitos_entrega",
                    models.BooleanField(
                        default=False, verbose_name="Requisitos de Entrega"
                    ),
                ),
                (
                    "requisitos_entrega_obs",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Detalhar Entrega"
                    ),
                ),
                (
                    "requisitos_pos_entrega",
                    models.BooleanField(
                        default=False, verbose_name="Requisitos Pós-Entrega"
                    ),
                ),
                (
                    "requisitos_pos_entrega_obs",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Detalhar Pós-Entrega"
                    ),
                ),
                (
                    "requisitos_comunicacao",
                    models.BooleanField(
                        default=False, verbose_name="Comunicação Eletrônica"
                    ),
                ),
                (
                    "requisitos_comunicacao_obs",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Detalhar Comunicação"
                    ),
                ),
                (
                    "requisitos_notificacao",
                    models.BooleanField(
                        default=False, verbose_name="Notificação de Embarque"
                    ),
                ),
                (
                    "requisitos_notificacao_obs",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Detalhar Notificação"
                    ),
                ),
                (
                    "especificacao_embalagem",
                    models.BooleanField(
                        default=False, verbose_name="Especificação de Embalagem"
                    ),
                ),
                (
                    "especificacao_embalagem_obs",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Detalhar Embalagem"
                    ),
                ),
                (
                    "especificacao_identificacao",
                    models.BooleanField(
                        default=False, verbose_name="Especificação de Identificação"
                    ),
                ),
                (
                    "especificacao_identificacao_obs",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        verbose_name="Detalhar Identificação",
                    ),
                ),
                (
                    "tipo_embalagem",
                    models.BooleanField(
                        default=False, verbose_name="Tipo de Embalagem"
                    ),
                ),
                (
                    "tipo_embalagem_obs",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Detalhar Tipo"
                    ),
                ),
                (
                    "conclusao",
                    models.CharField(
                        choices=[
                            ("Viável", "Viável (sem revisões)"),
                            ("Viável c/ Recomendações", "Viável (com recomendações)"),
                            ("Inviável", "Inviável (revisão necessária)"),
                        ],
                        max_length=30,
                        verbose_name="Conclusão da Análise Crítica",
                    ),
                ),
                (
                    "consideracoes",
                    django_ckeditor_5.fields.CKEditor5Field(
                        blank=True, null=True, verbose_name="Considerações"
                    ),
                ),
                (
                    "cotacao",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="analise_comercial",
                        to="comercial.cotacao",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Criado por",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Atualizado por",
                    ),
                ),
            ],
            options={
                "verbose_name": "Análise Comercial",
                "verbose_name_plural": "Análises Comerciais",
            },
        ),
    ]
