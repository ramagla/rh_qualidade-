# Generated by Django 4.2.16 on 2025-07-04 14:41

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_ckeditor_5.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AnaliseComercial",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "metodologia",
                    models.CharField(
                        choices=[
                            ("Não aplicável", "Não aplicável"),
                            ("PPAP Nível 1", "PPAP Nível 1"),
                            ("PPAP Nível 2", "PPAP Nível 2"),
                            ("PPAP Nível 3", "PPAP Nível 3"),
                            ("PPAP Nível 4", "PPAP Nível 4"),
                            ("PPAP Nível 5", "PPAP Nível 5"),
                        ],
                        max_length=30,
                        verbose_name="Metodologia de Aprovação",
                    ),
                ),
                (
                    "material_fornecido",
                    models.BooleanField(
                        default=False,
                        verbose_name="2. Material fornecido pelo cliente ?",
                    ),
                ),
                (
                    "material_fornecido_obs",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Detalhar Material"
                    ),
                ),
                (
                    "requisitos_entrega",
                    models.BooleanField(
                        default=False,
                        verbose_name="3. Existe Requisitos de Entrega (frequência)?",
                    ),
                ),
                (
                    "requisitos_entrega_obs",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Detalhar Entrega"
                    ),
                ),
                (
                    "requisitos_pos_entrega",
                    models.BooleanField(
                        default=False, verbose_name="4. Existe Requisitos Pós-Entrega ?"
                    ),
                ),
                (
                    "requisitos_pos_entrega_obs",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Detalhar Pós-Entrega"
                    ),
                ),
                (
                    "requisitos_comunicacao",
                    models.BooleanField(
                        default=False,
                        verbose_name="5. Existe requisito de Comunicação Eletrônica com o cliente?",
                    ),
                ),
                (
                    "requisitos_comunicacao_obs",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Detalhar Comunicação"
                    ),
                ),
                (
                    "requisitos_notificacao",
                    models.BooleanField(
                        default=False,
                        verbose_name="6. Existe requisito de notificação de Embarque ?",
                    ),
                ),
                (
                    "requisitos_notificacao_obs",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Detalhar Notificação"
                    ),
                ),
                (
                    "especificacao_embalagem",
                    models.BooleanField(
                        default=False,
                        verbose_name="7. Existe especificação de Embalagem",
                    ),
                ),
                (
                    "especificacao_embalagem_obs",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Detalhar Embalagem"
                    ),
                ),
                (
                    "especificacao_identificacao",
                    models.BooleanField(
                        default=False,
                        verbose_name="8. Existe especificação de Identificação",
                    ),
                ),
                (
                    "especificacao_identificacao_obs",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        verbose_name="Detalhar Identificação",
                    ),
                ),
                (
                    "tipo_embalagem",
                    models.BooleanField(
                        default=False,
                        verbose_name="9. Qual o tipo de embalagem a ser utilizada ?",
                    ),
                ),
                (
                    "tipo_embalagem_obs",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Detalhar Tipo"
                    ),
                ),
                (
                    "conclusao",
                    models.CharField(
                        choices=[
                            (
                                "Viável",
                                "Viavel (O produto pode ser produzido conforme especificado,sem revisoes) ",
                            ),
                            (
                                "Viável c/ Recomendações",
                                "Viável (alterações recomendadas conforme considerações)",
                            ),
                            (
                                "Inviável",
                                "Inviável (necessidade de revisão do projeto para a manufatura do produto dentro dos requisitos especificados)",
                            ),
                        ],
                        max_length=30,
                        verbose_name="Conclusão da Análise Crítica",
                    ),
                ),
                (
                    "consideracoes",
                    django_ckeditor_5.fields.CKEditor5Field(
                        blank=True, null=True, verbose_name="Considerações"
                    ),
                ),
                (
                    "qtde_estimada",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Quantidade Estimada"
                    ),
                ),
                ("assinado_em", models.DateTimeField(auto_now_add=True)),
                (
                    "data_assinatura",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Data da assinatura"
                    ),
                ),
                (
                    "assinatura_nome",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="Nome da assinatura",
                    ),
                ),
                (
                    "assinatura_cn",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="CN da assinatura (email)",
                    ),
                ),
                (
                    "periodo",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Único", "Único"),
                            ("Quinzenal", "Quinzenal"),
                            ("Mensal", "Mensal"),
                            ("Trimestral", "Trimestral"),
                            ("Semestral", "Semestral"),
                            ("Anual", "Anual"),
                            ("Esporádico", "Esporádico"),
                        ],
                        max_length=20,
                        null=True,
                        verbose_name="Periodicidade de Fornecimento",
                    ),
                ),
            ],
            options={
                "verbose_name": "Análise Comercial",
                "verbose_name_plural": "Análises Comerciais",
            },
        ),
        migrations.CreateModel(
            name="AvaliacaoTecnica",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "possui_projeto",
                    models.BooleanField(
                        default=False,
                        verbose_name="1. Existe característica especoal além das relacionadas nas especificações ?",
                    ),
                ),
                (
                    "projeto_obs",
                    models.CharField(
                        blank=True,
                        max_length=300,
                        verbose_name="Detalhes sobre o projeto/desenho",
                    ),
                ),
                (
                    "precisa_dispositivo",
                    models.BooleanField(
                        default=False, verbose_name="2. A peça é item de aparência ?"
                    ),
                ),
                (
                    "dispositivo_obs",
                    models.CharField(
                        blank=True,
                        max_length=300,
                        verbose_name="Detalhes sobre o dispositivo",
                    ),
                ),
                (
                    "caracteristicas_criticas",
                    models.BooleanField(
                        default=False,
                        verbose_name="3. O cliente forneceu FMEA de produto ?",
                    ),
                ),
                (
                    "criticas_obs",
                    models.CharField(
                        blank=True,
                        max_length=300,
                        verbose_name="Quais são essas características?",
                    ),
                ),
                (
                    "precisa_amostras",
                    models.BooleanField(
                        default=False,
                        verbose_name="4. O cliente solicitou algum teste além dos relacionados nas especificações ?",
                    ),
                ),
                (
                    "amostras_obs",
                    models.CharField(
                        blank=True,
                        max_length=300,
                        verbose_name="Detalhes sobre as amostras",
                    ),
                ),
                (
                    "restricao_dimensional",
                    models.BooleanField(
                        default=False,
                        verbose_name="5. O cliente forneceu lista de fornecedores/materiais aprovados ?",
                    ),
                ),
                (
                    "restricao_obs",
                    models.CharField(
                        blank=True, max_length=300, verbose_name="Descreva a restrição"
                    ),
                ),
                (
                    "acabamento_superficial",
                    models.BooleanField(
                        default=False,
                        verbose_name="6 .As normas/especificações/requisitos estão disponiveis?",
                    ),
                ),
                (
                    "acabamento_obs",
                    models.CharField(
                        blank=True, max_length=300, verbose_name="Descreva o acabamento"
                    ),
                ),
                (
                    "validacao_metrologica",
                    models.BooleanField(
                        default=False,
                        verbose_name="7. São aplicaveis requisitos estatutários/regulamentares ?",
                    ),
                ),
                (
                    "metrologia_obs",
                    models.CharField(
                        blank=True,
                        max_length=300,
                        verbose_name="Detalhes sobre a validação",
                    ),
                ),
                (
                    "rastreabilidade",
                    models.BooleanField(
                        default=False,
                        verbose_name="8. Existem requisitos adicionais e/ou não declarados pelo cliente ?",
                    ),
                ),
                (
                    "rastreabilidade_obs",
                    models.CharField(
                        blank=True,
                        max_length=300,
                        verbose_name="Detalhes da rastreabilidade",
                    ),
                ),
                (
                    "metas_a",
                    models.BooleanField(
                        default=False,
                        verbose_name="9a. Metas de qualidade (exemplo PPM) ?",
                    ),
                ),
                (
                    "metas_a_obs",
                    models.CharField(
                        blank=True, max_length=300, verbose_name="Detalhes"
                    ),
                ),
                (
                    "metas_b",
                    models.BooleanField(
                        default=False, verbose_name="9b. Metas de produtividade ?"
                    ),
                ),
                (
                    "metas_b_obs",
                    models.CharField(
                        blank=True, max_length=300, verbose_name="Detalhes"
                    ),
                ),
                (
                    "metas_c",
                    models.BooleanField(
                        default=False,
                        verbose_name="9c. Metas de desempenho (exemplo: Cp, Cpk, etc.) ?",
                    ),
                ),
                (
                    "metas_c_obs",
                    models.CharField(
                        blank=True, max_length=300, verbose_name="Detalhes"
                    ),
                ),
                (
                    "metas_d",
                    models.BooleanField(
                        default=False, verbose_name="9d. Metas de funcionamento ?"
                    ),
                ),
                (
                    "metas_d_obs",
                    models.CharField(
                        blank=True, max_length=300, verbose_name="Detalhes"
                    ),
                ),
                (
                    "seguranca",
                    models.BooleanField(
                        choices=[
                            (None, "Não aplicável"),
                            (True, "Sim"),
                            (False, "Não"),
                        ],
                        null=True,
                        verbose_name="10. Os requisitos sobre o item de segurança foram considerados ?",
                    ),
                ),
                (
                    "seguranca_obs",
                    models.CharField(
                        blank=True, max_length=300, verbose_name="Detalhes"
                    ),
                ),
                (
                    "requisito_especifico",
                    models.BooleanField(
                        choices=[
                            (None, "Não aplicável"),
                            (True, "Sim"),
                            (False, "Não"),
                        ],
                        null=True,
                        verbose_name="11. O cliente forneceu requisito especifico ?",
                    ),
                ),
                (
                    "requisito_especifico_obs",
                    models.CharField(
                        blank=True, max_length=300, verbose_name="Detalhes"
                    ),
                ),
                (
                    "conclusao_tec",
                    models.CharField(
                        choices=[
                            (
                                "Viável",
                                "Viavel (O produto pode ser produzido conforme especificado,sem revisoes) ",
                            ),
                            (
                                "Viável c/ Recomendações",
                                "Viável (alterações recomendadas conforme considerações)",
                            ),
                            (
                                "Inviável",
                                "Inviável (necessidade de revisão do projeto para a manufatura do produto dentro dos requisitos especificados)",
                            ),
                        ],
                        max_length=30,
                        verbose_name="Conclusão da Análise Crítica",
                    ),
                ),
                (
                    "consideracoes_tec",
                    models.TextField(
                        blank=True, null=True, verbose_name="Considerações"
                    ),
                ),
                ("assinado_em", models.DateTimeField(auto_now_add=True)),
                (
                    "data_assinatura",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Data da assinatura"
                    ),
                ),
                (
                    "assinatura_nome",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="Nome da assinatura",
                    ),
                ),
                (
                    "assinatura_cn",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="CN da assinatura (email)",
                    ),
                ),
            ],
            options={
                "verbose_name": "Avaliação Técnica",
                "verbose_name_plural": "Avaliações Técnicas",
            },
        ),
        migrations.CreateModel(
            name="BlocoFerramenta",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("numero", models.CharField(max_length=50, verbose_name="Bloco")),
            ],
        ),
        migrations.CreateModel(
            name="CentroDeCusto",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nome",
                    models.CharField(max_length=100, verbose_name="Centro de Custo"),
                ),
                (
                    "custo_atual",
                    models.DecimalField(
                        decimal_places=2, max_digits=12, verbose_name="Custo do Setor"
                    ),
                ),
                ("vigencia", models.DateField(verbose_name="Início da Vigência")),
                (
                    "observacao",
                    models.TextField(blank=True, null=True, verbose_name="Observação"),
                ),
                ("atualizado_em", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Centro de Custo",
                "verbose_name_plural": "Centros de Custo",
                "ordering": ["nome"],
            },
        ),
        migrations.CreateModel(
            name="Cliente",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("razao_social", models.CharField(max_length=255)),
                ("cnpj", models.CharField(max_length=18, unique=True)),
                ("endereco", models.CharField(max_length=255)),
                ("numero", models.CharField(max_length=10)),
                ("bairro", models.CharField(max_length=100)),
                ("cidade", models.CharField(max_length=100)),
                ("cep", models.CharField(max_length=9)),
                ("uf", models.CharField(max_length=2)),
                (
                    "status",
                    models.CharField(
                        choices=[("Ativo", "Ativo"), ("Inativo", "Inativo")],
                        default="Ativo",
                        max_length=10,
                    ),
                ),
                (
                    "tipo_cliente",
                    models.CharField(
                        choices=[
                            ("Automotivo", "Automotivo"),
                            ("Não Automotivo", "Não Automotivo"),
                            ("Reposição", "Reposição"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "tipo_cadastro",
                    models.CharField(
                        choices=[
                            ("Cliente", "Cliente"),
                            ("Transportadora", "Transportadora"),
                        ],
                        default="Cliente",
                        max_length=20,
                    ),
                ),
                ("ie", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "complemento",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("telefone", models.CharField(blank=True, max_length=20, null=True)),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                (
                    "logotipo",
                    models.ImageField(
                        blank=True, null=True, upload_to="logos_clientes/"
                    ),
                ),
                (
                    "nome_contato",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "email_contato",
                    models.EmailField(blank=True, max_length=254, null=True),
                ),
                (
                    "telefone_contato",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "cargo_contato",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "icms",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                ("cfop", models.CharField(blank=True, max_length=10, null=True)),
                (
                    "cond_pagamento",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("cod_bm", models.CharField(blank=True, max_length=50, null=True)),
                ("observacao", models.TextField(blank=True, null=True)),
                (
                    "atualizado_em",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ClienteDocumento",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tipo",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Cartao IPI", "Cartão IPI"),
                            ("Alteracao de CNPJ", "Alteração de CNPJ"),
                            ("Outros", "Outros"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "arquivo",
                    models.FileField(
                        blank=True, null=True, upload_to="documentos_clientes/"
                    ),
                ),
                ("data_upload", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="Cotacao",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "data_abertura",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="Data de Abertura",
                    ),
                ),
                (
                    "tipo",
                    models.CharField(
                        choices=[("Atualização", "Atualização"), ("Novo", "Novo")],
                        max_length=12,
                        verbose_name="Tipo de Cotação",
                    ),
                ),
                (
                    "frete",
                    models.CharField(
                        choices=[("CIF", "CIF"), ("FOB", "FOB")],
                        max_length=3,
                        verbose_name="Frete",
                    ),
                ),
                (
                    "observacoes",
                    django_ckeditor_5.fields.CKEditor5Field(
                        blank=True, null=True, verbose_name="Observações"
                    ),
                ),
                (
                    "cond_pagamento",
                    models.CharField(
                        max_length=100, verbose_name="Condição de Pagamento"
                    ),
                ),
                (
                    "icms",
                    models.DecimalField(
                        decimal_places=2, max_digits=5, verbose_name="ICMS (%)"
                    ),
                ),
            ],
            options={
                "verbose_name": "Cotação",
                "verbose_name_plural": "Cotações",
            },
        ),
        migrations.CreateModel(
            name="CotacaoFerramenta",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "observacoes",
                    django_ckeditor_5.fields.CKEditor5Field(
                        blank=True, null=True, verbose_name="Observações"
                    ),
                ),
                ("assinado_em", models.DateTimeField(auto_now_add=True)),
                (
                    "data_assinatura",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Data da assinatura"
                    ),
                ),
                (
                    "assinatura_nome",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="Nome da assinatura",
                    ),
                ),
                (
                    "assinatura_cn",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="CN da assinatura (email)",
                    ),
                ),
            ],
            options={
                "verbose_name": "Ferramenta na Cotação",
                "verbose_name_plural": "Ferramentas na Cotação",
            },
        ),
        migrations.CreateModel(
            name="Desenvolvimento",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "completo",
                    models.BooleanField(
                        default=False, verbose_name="Tudo preenchido corretamente?"
                    ),
                ),
                (
                    "consideracoes",
                    django_ckeditor_5.fields.CKEditor5Field(
                        blank=True, null=True, verbose_name="Considerações Finais"
                    ),
                ),
                ("assinado_em", models.DateTimeField(auto_now_add=True)),
                (
                    "data_assinatura",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Data da assinatura"
                    ),
                ),
                (
                    "assinatura_nome",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="Nome da assinatura",
                    ),
                ),
                (
                    "assinatura_cn",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="CN da assinatura (email)",
                    ),
                ),
            ],
            options={
                "verbose_name": "Desenvolvimento da Cotação",
                "verbose_name_plural": "Desenvolvimentos da Cotação",
            },
        ),
        migrations.CreateModel(
            name="Ferramenta",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("codigo", models.CharField(max_length=20, unique=True)),
                ("descricao", models.CharField(max_length=255)),
                (
                    "vida_util_em_pecas",
                    models.PositiveIntegerField(verbose_name="Vida útil (em peças)"),
                ),
                (
                    "desenho_pdf",
                    models.FileField(
                        blank=True, null=True, upload_to="ferramentas/desenhos/"
                    ),
                ),
                (
                    "tipo",
                    models.CharField(
                        choices=[
                            ("Nova", "Ferramenta Nova"),
                            ("Adpt", "Adaptação"),
                            ("Disp", "Dispositivo"),
                            ("Outro", "Outros"),
                        ],
                        max_length=10,
                    ),
                ),
                ("observacoes", models.TextField(blank=True, null=True)),
                (
                    "token_cotacao",
                    models.UUIDField(
                        blank=True, default=uuid.uuid4, editable=False, null=True
                    ),
                ),
                ("cotacao_enviada_em", models.DateTimeField(blank=True, null=True)),
                (
                    "passo",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Passo",
                    ),
                ),
                (
                    "largura_tira",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Largura da Tira / Perímetro de Corte",
                    ),
                ),
                (
                    "num_matrizes",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Número de Matrizes"
                    ),
                ),
                (
                    "num_puncoes",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Número de Punções"
                    ),
                ),
                (
                    "num_carros",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Número de Carros"
                    ),
                ),
                (
                    "num_formadores",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Número de Formadores"
                    ),
                ),
                (
                    "valor_unitario_matriz",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "valor_unitario_puncao",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "valor_unitario_flange",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "valor_unitario_carros",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "valor_unitario_formadores",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "peso_sae_kg",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=10,
                        null=True,
                        verbose_name="Peso SAE 1020 (Kg)",
                    ),
                ),
                (
                    "valor_unitario_sae",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Valor Unitário SAE 1020 (R$/Kg)",
                    ),
                ),
                (
                    "peso_vnd_kg",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=10,
                        null=True,
                        verbose_name="Peso VND (Kg)",
                    ),
                ),
                (
                    "valor_unitario_vnd",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Valor Unitário VND (R$/Kg)",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="HistoricoCustoCentroDeCusto",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "custo_anterior",
                    models.DecimalField(decimal_places=2, max_digits=12),
                ),
                ("novo_custo", models.DecimalField(decimal_places=2, max_digits=12)),
                ("alterado_em", models.DateTimeField()),
            ],
            options={
                "verbose_name": "Histórico de Custo",
                "verbose_name_plural": "Históricos de Custo",
                "ordering": ["-alterado_em"],
            },
        ),
        migrations.CreateModel(
            name="Item",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "codigo",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="Código Interno"
                    ),
                ),
                (
                    "descricao",
                    models.CharField(max_length=255, verbose_name="Descrição"),
                ),
                ("ncm", models.CharField(max_length=10, verbose_name="NCM")),
                (
                    "lote_minimo",
                    models.PositiveIntegerField(verbose_name="Lote Mínimo"),
                ),
                (
                    "codigo_cliente",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Código no Cliente",
                    ),
                ),
                (
                    "descricao_cliente",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Descrição no Cliente",
                    ),
                ),
                (
                    "ipi",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="IPI (%)",
                    ),
                ),
                (
                    "automotivo_oem",
                    models.BooleanField(default=False, verbose_name="Automotivo OEM"),
                ),
                (
                    "requisito_especifico",
                    models.BooleanField(
                        default=False, verbose_name="Requisito Específico Cliente?"
                    ),
                ),
                (
                    "item_seguranca",
                    models.BooleanField(
                        default=False, verbose_name="É Item de Segurança?"
                    ),
                ),
                (
                    "codigo_desenho",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Código do Desenho",
                    ),
                ),
                (
                    "desenho",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="itens/desenhos/",
                        verbose_name="Desenho",
                    ),
                ),
                (
                    "revisao",
                    models.CharField(
                        blank=True, max_length=10, null=True, verbose_name="Revisão"
                    ),
                ),
                (
                    "data_revisao",
                    models.DateField(
                        blank=True, null=True, verbose_name="Data da Revisão"
                    ),
                ),
                ("criado_em", models.DateTimeField(auto_now_add=True)),
                ("atualizado_em", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["cliente", "codigo"],
            },
        ),
        migrations.CreateModel(
            name="ItemBloco",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "numero_item",
                    models.CharField(max_length=20, verbose_name="Nº Item"),
                ),
                (
                    "medidas",
                    models.CharField(
                        max_length=100, verbose_name="Medidas (ex: 25,4x94x165)"
                    ),
                ),
                (
                    "material",
                    models.CharField(
                        choices=[("SAE 1020", "SAE 1020"), ("VND", "VND")],
                        max_length=50,
                        verbose_name="Material",
                    ),
                ),
                (
                    "peso_aco",
                    models.DecimalField(
                        decimal_places=2,
                        default=7.86,
                        max_digits=5,
                        verbose_name="Peso Aço",
                    ),
                ),
                (
                    "volume",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Volume",
                    ),
                ),
                (
                    "peso_total",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Peso Total",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MaoDeObraFerramenta",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tipo",
                    models.CharField(
                        choices=[
                            ("Ferramentaria", "Ferramentaria"),
                            ("Projeto", "Projeto"),
                            ("Externa", "MO Externa"),
                        ],
                        max_length=20,
                    ),
                ),
                ("horas", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "valor_hora",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PreCalculo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "numero",
                    models.PositiveIntegerField(
                        editable=False,
                        unique=True,
                        verbose_name="Número do Pré-Cálculo",
                    ),
                ),
                ("criado_em", models.DateTimeField(auto_now_add=True)),
                (
                    "observacoes_materiais",
                    django_ckeditor_5.fields.CKEditor5Field(
                        blank=True, null=True, verbose_name="Observações Materiais"
                    ),
                ),
            ],
            options={
                "verbose_name": "Pré-Cálculo",
                "verbose_name_plural": "Pré-Cálculos",
            },
        ),
        migrations.CreateModel(
            name="PreCalculoMaterial",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "icms",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="ICMS (%)",
                    ),
                ),
                ("codigo", models.CharField(max_length=50, verbose_name="Código")),
                (
                    "lote_minimo",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Lote Mínimo"
                    ),
                ),
                (
                    "entrega_dias",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Entrega (dias)"
                    ),
                ),
                ("selecionado", models.BooleanField(default=False)),
                (
                    "desenvolvido_mm",
                    models.DecimalField(
                        decimal_places=2, max_digits=8, verbose_name="Desenvolvido (mm)"
                    ),
                ),
                (
                    "peso_liquido",
                    models.DecimalField(
                        decimal_places=7,
                        max_digits=20,
                        verbose_name="Peso Líquido (kg)",
                    ),
                ),
                (
                    "peso_bruto",
                    models.DecimalField(
                        decimal_places=7, max_digits=20, verbose_name="Peso Bruto (kg)"
                    ),
                ),
                (
                    "preco_kg",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        max_digits=12,
                        null=True,
                        verbose_name="Preço /kg",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("aguardando", "Aguardando Cotação"), ("ok", "OK")],
                        default="aguardando",
                        max_length=20,
                        verbose_name="Status da Cotação",
                    ),
                ),
                ("assinado_em", models.DateTimeField(auto_now_add=True)),
                (
                    "data_assinatura",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Data da assinatura"
                    ),
                ),
                (
                    "assinatura_nome",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="Nome da assinatura",
                    ),
                ),
                (
                    "assinatura_cn",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="CN da assinatura (email)",
                    ),
                ),
            ],
            options={
                "verbose_name": "Pré-Cálculo Matéria-Prima",
                "verbose_name_plural": "Materiais Pré-Cálculo",
            },
        ),
        migrations.CreateModel(
            name="ServicoFerramenta",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tipo_servico",
                    models.CharField(
                        choices=[
                            ("Eletroerosao", "Eletro erosão"),
                            ("Rolamento", "Rolamento"),
                            ("Rolete", "Rolete"),
                            ("Taxa", "Taxa Administrativa"),
                            ("Tratamento", "Tratamento térmico"),
                        ],
                        max_length=20,
                    ),
                ),
                ("quantidade", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "valor_unitario",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "ferramenta",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="servicos",
                        to="comercial.ferramenta",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RoteiroCotacao",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                ("etapa", models.PositiveIntegerField(verbose_name="Etapa Nº")),
                (
                    "nome_acao",
                    models.CharField(max_length=100, verbose_name="Nome da Ação"),
                ),
                (
                    "pph",
                    models.DecimalField(
                        decimal_places=4, max_digits=10, verbose_name="Peças por Hora"
                    ),
                ),
                (
                    "setup_minutos",
                    models.PositiveIntegerField(verbose_name="Tempo de Setup (min)"),
                ),
                (
                    "custo_hora",
                    models.DecimalField(
                        decimal_places=4, max_digits=12, verbose_name="Custo Hora"
                    ),
                ),
                (
                    "custo_total",
                    models.DecimalField(
                        decimal_places=4, max_digits=14, verbose_name="Custo Total"
                    ),
                ),
                ("assinado_em", models.DateTimeField(auto_now_add=True)),
                (
                    "data_assinatura",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Data da assinatura"
                    ),
                ),
                (
                    "assinatura_nome",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="Nome da assinatura",
                    ),
                ),
                (
                    "assinatura_cn",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="CN da assinatura (email)",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Criado por",
                    ),
                ),
                (
                    "precalculo",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="roteiro_item",
                        to="comercial.precalculo",
                    ),
                ),
                (
                    "setor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="comercial.centrodecusto",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Atualizado por",
                    ),
                ),
                (
                    "usuario",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Roteiro na Cotação",
                "verbose_name_plural": "Roteiros na Cotação",
            },
        ),
        migrations.CreateModel(
            name="RegrasCalculo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "icms",
                    models.DecimalField(
                        decimal_places=2, max_digits=5, verbose_name="ICMS (%)"
                    ),
                ),
                (
                    "pis",
                    models.DecimalField(
                        decimal_places=2, max_digits=5, verbose_name="PIS (%)"
                    ),
                ),
                (
                    "confins",
                    models.DecimalField(
                        decimal_places=2, max_digits=5, verbose_name="Cofins (%)"
                    ),
                ),
                (
                    "ir",
                    models.DecimalField(
                        decimal_places=2, max_digits=5, verbose_name="IR (%)"
                    ),
                ),
                (
                    "csll",
                    models.DecimalField(
                        decimal_places=2, max_digits=5, verbose_name="CSLL (%)"
                    ),
                ),
                (
                    "df",
                    models.DecimalField(
                        decimal_places=2, max_digits=5, verbose_name="DF (%)"
                    ),
                ),
                (
                    "dv",
                    models.DecimalField(
                        decimal_places=2, max_digits=5, verbose_name="DV (%)"
                    ),
                ),
                ("assinado_em", models.DateTimeField(auto_now_add=True)),
                (
                    "data_assinatura",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Data da assinatura"
                    ),
                ),
                (
                    "assinatura_nome",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="Nome da assinatura",
                    ),
                ),
                (
                    "assinatura_cn",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="CN da assinatura (email)",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Criado por",
                    ),
                ),
                (
                    "precalculo",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="regras_calculo_item",
                        to="comercial.precalculo",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Atualizado por",
                    ),
                ),
                (
                    "usuario",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Regras de Cálculo",
                "verbose_name_plural": "Regras de Cálculo",
            },
        ),
        migrations.CreateModel(
            name="PreCalculoServicoExterno",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                ("codigo", models.CharField(max_length=50, verbose_name="Código")),
                (
                    "lote_minimo",
                    models.PositiveIntegerField(verbose_name="Lote Mínimo"),
                ),
                (
                    "entrega_dias",
                    models.PositiveIntegerField(verbose_name="Entrega (dias)"),
                ),
                (
                    "desenvolvido_mm",
                    models.DecimalField(
                        decimal_places=2, max_digits=8, verbose_name="Desenvolvido (mm)"
                    ),
                ),
                (
                    "peso_liquido",
                    models.DecimalField(
                        decimal_places=3,
                        max_digits=10,
                        verbose_name="Peso Líquido (kg)",
                    ),
                ),
                (
                    "peso_bruto",
                    models.DecimalField(
                        decimal_places=3, max_digits=10, verbose_name="Peso Bruto (kg)"
                    ),
                ),
                (
                    "preco_kg",
                    models.DecimalField(
                        decimal_places=4, max_digits=12, verbose_name="Preço /kg"
                    ),
                ),
                ("assinado_em", models.DateTimeField(auto_now_add=True)),
                (
                    "data_assinatura",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Data da assinatura"
                    ),
                ),
                (
                    "assinatura_nome",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="Nome da assinatura",
                    ),
                ),
                (
                    "assinatura_cn",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="CN da assinatura (email)",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Criado por",
                    ),
                ),
            ],
            options={
                "verbose_name": "Pré-Cálculo Serviço Externo",
                "verbose_name_plural": "Serviços Externos Pré-Cálculo",
            },
        ),
    ]
