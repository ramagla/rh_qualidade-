# Generated by Django 4.2.16 on 2025-07-31 17:56

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_ckeditor_5.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("qualidade_fornecimento", "0099_alter_fornecedorqualificado_data_homologacao"),
    ]

    operations = [
        migrations.CreateModel(
            name="AnaliseComercial",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "metodologia",
                    models.CharField(
                        choices=[
                            ("Não aplicável", "Não aplicável"),
                            ("PPAP Nível 1", "PPAP Nível 1"),
                            ("PPAP Nível 2", "PPAP Nível 2"),
                            ("PPAP Nível 3", "PPAP Nível 3"),
                            ("PPAP Nível 4", "PPAP Nível 4"),
                            ("PPAP Nível 5", "PPAP Nível 5"),
                        ],
                        max_length=30,
                        verbose_name="Metodologia de Aprovação",
                    ),
                ),
                (
                    "material_fornecido",
                    models.BooleanField(
                        default=False,
                        verbose_name="2. Material fornecido pelo cliente ?",
                    ),
                ),
                (
                    "material_fornecido_obs",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Detalhar Material"
                    ),
                ),
                (
                    "requisitos_entrega",
                    models.BooleanField(
                        default=False,
                        verbose_name="3. Existe Requisitos de Entrega (frequência)?",
                    ),
                ),
                (
                    "requisitos_entrega_obs",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Detalhar Entrega"
                    ),
                ),
                (
                    "requisitos_pos_entrega",
                    models.BooleanField(
                        default=False, verbose_name="4. Existe Requisitos Pós-Entrega ?"
                    ),
                ),
                (
                    "requisitos_pos_entrega_obs",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Detalhar Pós-Entrega"
                    ),
                ),
                (
                    "requisitos_comunicacao",
                    models.BooleanField(
                        default=False,
                        verbose_name="5. Existe requisito de Comunicação Eletrônica com o cliente?",
                    ),
                ),
                (
                    "requisitos_comunicacao_obs",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Detalhar Comunicação"
                    ),
                ),
                (
                    "requisitos_notificacao",
                    models.BooleanField(
                        default=False,
                        verbose_name="6. Existe requisito de notificação de Embarque ?",
                    ),
                ),
                (
                    "requisitos_notificacao_obs",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Detalhar Notificação"
                    ),
                ),
                (
                    "especificacao_embalagem",
                    models.BooleanField(
                        default=False,
                        verbose_name="7. Existe especificação de Embalagem",
                    ),
                ),
                (
                    "especificacao_embalagem_obs",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Detalhar Embalagem"
                    ),
                ),
                (
                    "especificacao_identificacao",
                    models.BooleanField(
                        default=False,
                        verbose_name="8. Existe especificação de Identificação",
                    ),
                ),
                (
                    "especificacao_identificacao_obs",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        verbose_name="Detalhar Identificação",
                    ),
                ),
                (
                    "tipo_embalagem",
                    models.BooleanField(
                        default=False,
                        verbose_name="9. Qual o tipo de embalagem a ser utilizada ?",
                    ),
                ),
                (
                    "tipo_embalagem_obs",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Detalhar Tipo"
                    ),
                ),
                (
                    "conclusao",
                    models.CharField(
                        choices=[
                            (
                                "Viável",
                                "Viavel (O produto pode ser produzido conforme especificado,sem revisoes) ",
                            ),
                            (
                                "Viável c/ Recomendações",
                                "Viável (alterações recomendadas conforme considerações)",
                            ),
                            (
                                "Inviável",
                                "Inviável (necessidade de revisão do projeto para a manufatura do produto dentro dos requisitos especificados)",
                            ),
                        ],
                        max_length=30,
                        verbose_name="Conclusão da Análise Crítica",
                    ),
                ),
                (
                    "consideracoes",
                    django_ckeditor_5.fields.CKEditor5Field(
                        blank=True, null=True, verbose_name="Considerações"
                    ),
                ),
                (
                    "qtde_estimada",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Quantidade Estimada"
                    ),
                ),
                (
                    "capacidade_produtiva",
                    models.BooleanField(
                        blank=True,
                        null=True,
                        verbose_name="Capacidade produtiva disponível?",
                    ),
                ),
                ("assinado_em", models.DateTimeField(auto_now_add=True)),
                (
                    "data_assinatura",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Data da assinatura"
                    ),
                ),
                (
                    "assinatura_nome",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="Nome da assinatura",
                    ),
                ),
                (
                    "assinatura_cn",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="CN da assinatura (email)",
                    ),
                ),
                (
                    "periodo",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Único", "Único"),
                            ("Quinzenal", "Quinzenal"),
                            ("Mensal", "Mensal"),
                            ("Trimestral", "Trimestral"),
                            ("Semestral", "Semestral"),
                            ("Anual", "Anual"),
                            ("Esporádico", "Esporádico"),
                        ],
                        max_length=20,
                        null=True,
                        verbose_name="Periodicidade de Fornecimento",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("andamento", "Em Andamento"),
                            ("aprovado", "Aprovado"),
                            ("reprovado", "Reprovado"),
                            ("amostras", "Solicitação de Amostras"),
                        ],
                        default="andamento",
                        max_length=20,
                        verbose_name="Status da Análise",
                    ),
                ),
                (
                    "motivo_reprovacao",
                    django_ckeditor_5.fields.CKEditor5Field(
                        blank=True, null=True, verbose_name="Motivo da Reprovação"
                    ),
                ),
            ],
            options={
                "verbose_name": "Análise Comercial",
                "verbose_name_plural": "Análises Comerciais",
            },
        ),
        migrations.CreateModel(
            name="AvaliacaoTecnica",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "possui_projeto",
                    models.BooleanField(
                        default=False,
                        verbose_name="1. Existe característica especial além das relacionadas nas especificações?",
                    ),
                ),
                (
                    "projeto_obs",
                    models.CharField(
                        blank=True,
                        max_length=300,
                        verbose_name="Detalhes sobre o projeto/desenho",
                    ),
                ),
                (
                    "precisa_dispositivo",
                    models.BooleanField(
                        default=False, verbose_name="2. A peça é item de aparência?"
                    ),
                ),
                (
                    "dispositivo_obs",
                    models.CharField(
                        blank=True,
                        max_length=300,
                        verbose_name="Detalhes sobre o dispositivo",
                    ),
                ),
                (
                    "caracteristicas_criticas",
                    models.BooleanField(
                        default=False,
                        verbose_name="3. O cliente forneceu FMEA de produto?",
                    ),
                ),
                (
                    "criticas_obs",
                    models.CharField(
                        blank=True,
                        max_length=300,
                        verbose_name="Quais são essas características?",
                    ),
                ),
                (
                    "precisa_amostras",
                    models.BooleanField(
                        default=False,
                        verbose_name="4. O cliente solicitou testes adicionais?",
                    ),
                ),
                (
                    "amostras_obs",
                    models.CharField(
                        blank=True,
                        max_length=300,
                        verbose_name="Detalhes sobre as amostras",
                    ),
                ),
                (
                    "restricao_dimensional",
                    models.BooleanField(
                        default=False,
                        verbose_name="5. Lista de fornecedores/materiais aprovados?",
                    ),
                ),
                (
                    "restricao_obs",
                    models.CharField(
                        blank=True, max_length=300, verbose_name="Descreva a restrição"
                    ),
                ),
                (
                    "acabamento_superficial",
                    models.BooleanField(
                        default=False,
                        verbose_name="6. Normas/especificações estão disponíveis?",
                    ),
                ),
                (
                    "acabamento_obs",
                    models.CharField(
                        blank=True, max_length=300, verbose_name="Descreva o acabamento"
                    ),
                ),
                (
                    "validacao_metrologica",
                    models.BooleanField(
                        default=False,
                        verbose_name="7. Existem requisitos estatutários/regulamentares?",
                    ),
                ),
                (
                    "metrologia_obs",
                    models.CharField(
                        blank=True,
                        max_length=300,
                        verbose_name="Detalhes sobre a validação",
                    ),
                ),
                (
                    "rastreabilidade",
                    models.BooleanField(
                        default=False,
                        verbose_name="8. Requisitos adicionais ou não declarados?",
                    ),
                ),
                (
                    "rastreabilidade_obs",
                    models.CharField(
                        blank=True,
                        max_length=300,
                        verbose_name="Detalhes da rastreabilidade",
                    ),
                ),
                (
                    "item_aparencia",
                    models.BooleanField(
                        blank=True,
                        null=True,
                        verbose_name="2. A peça é item de aparência?",
                    ),
                ),
                (
                    "item_aparencia_obs",
                    models.CharField(
                        blank=True, max_length=300, verbose_name="Detalhes"
                    ),
                ),
                (
                    "fmea",
                    models.BooleanField(
                        blank=True,
                        null=True,
                        verbose_name="3. O cliente forneceu FMEA de produto?",
                    ),
                ),
                (
                    "fmea_obs",
                    models.CharField(
                        blank=True, max_length=300, verbose_name="Detalhes"
                    ),
                ),
                (
                    "teste_solicitado",
                    models.BooleanField(
                        blank=True,
                        null=True,
                        verbose_name="4. O cliente solicitou testes adicionais?",
                    ),
                ),
                (
                    "teste_solicitado_obs",
                    models.CharField(
                        blank=True, max_length=300, verbose_name="Detalhes"
                    ),
                ),
                (
                    "lista_fornecedores",
                    models.BooleanField(
                        blank=True,
                        null=True,
                        verbose_name="5. Lista de fornecedores/materiais aprovados?",
                    ),
                ),
                (
                    "lista_fornecedores_obs",
                    models.CharField(
                        blank=True, max_length=300, verbose_name="Detalhes"
                    ),
                ),
                (
                    "normas_disponiveis",
                    models.BooleanField(
                        blank=True,
                        null=True,
                        verbose_name="6. Normas/especificações estão disponíveis?",
                    ),
                ),
                (
                    "normas_disponiveis_obs",
                    models.CharField(
                        blank=True, max_length=300, verbose_name="Detalhes"
                    ),
                ),
                (
                    "requisitos_regulamentares",
                    models.BooleanField(
                        blank=True,
                        null=True,
                        verbose_name="7. Existem requisitos estatutários/regulamentares?",
                    ),
                ),
                (
                    "requisitos_regulamentares_obs",
                    models.CharField(
                        blank=True, max_length=300, verbose_name="Detalhes"
                    ),
                ),
                (
                    "requisitos_adicionais",
                    models.BooleanField(
                        blank=True,
                        null=True,
                        verbose_name="8. Requisitos adicionais ou não declarados?",
                    ),
                ),
                (
                    "requisitos_adicionais_obs",
                    models.CharField(
                        blank=True, max_length=300, verbose_name="Detalhes"
                    ),
                ),
                (
                    "metas_a",
                    models.BooleanField(
                        default=False,
                        verbose_name="9a. Metas de qualidade (exemplo PPM)?",
                    ),
                ),
                (
                    "metas_a_obs",
                    models.CharField(
                        blank=True, max_length=300, verbose_name="Detalhes"
                    ),
                ),
                (
                    "metas_b",
                    models.BooleanField(
                        default=False, verbose_name="9b. Metas de produtividade?"
                    ),
                ),
                (
                    "metas_b_obs",
                    models.CharField(
                        blank=True, max_length=300, verbose_name="Detalhes"
                    ),
                ),
                (
                    "metas_c",
                    models.BooleanField(
                        default=False,
                        verbose_name="9c. Metas de desempenho (exemplo: Cp, Cpk, etc.)?",
                    ),
                ),
                (
                    "metas_c_obs",
                    models.CharField(
                        blank=True, max_length=300, verbose_name="Detalhes"
                    ),
                ),
                (
                    "metas_confiabilidade",
                    models.BooleanField(
                        blank=True,
                        null=True,
                        verbose_name="9d. Metas de confiabilidade?",
                    ),
                ),
                (
                    "metas_confiabilidade_obs",
                    models.CharField(
                        blank=True, max_length=300, verbose_name="Detalhes"
                    ),
                ),
                (
                    "metas_d",
                    models.BooleanField(
                        default=False, verbose_name="9e. Metas de funcionamento?"
                    ),
                ),
                (
                    "metas_d_obs",
                    models.CharField(
                        blank=True, max_length=300, verbose_name="Detalhes"
                    ),
                ),
                (
                    "seguranca",
                    models.BooleanField(
                        choices=[
                            (None, "Não aplicável"),
                            (True, "Sim"),
                            (False, "Não"),
                        ],
                        null=True,
                        verbose_name="10. Os requisitos sobre o item de segurança foram considerados?",
                    ),
                ),
                (
                    "seguranca_obs",
                    models.CharField(
                        blank=True, max_length=300, verbose_name="Detalhes"
                    ),
                ),
                (
                    "requisito_especifico",
                    models.BooleanField(
                        choices=[
                            (None, "Não aplicável"),
                            (True, "Sim"),
                            (False, "Não"),
                        ],
                        null=True,
                        verbose_name="11. O cliente forneceu requisito específico?",
                    ),
                ),
                (
                    "requisito_especifico_obs",
                    models.CharField(
                        blank=True, max_length=300, verbose_name="Detalhes"
                    ),
                ),
                (
                    "conclusao_tec",
                    models.CharField(
                        choices=[
                            (
                                "Viável",
                                "Viável (O produto pode ser produzido conforme especificado, sem revisões)",
                            ),
                            (
                                "Viável c/ Recomendações",
                                "Viável (alterações recomendadas conforme considerações)",
                            ),
                            (
                                "Inviável",
                                "Inviável (necessidade de revisão do projeto para a manufatura do produto dentro dos requisitos especificados)",
                            ),
                        ],
                        max_length=30,
                        verbose_name="Conclusão da Análise Crítica",
                    ),
                ),
                (
                    "consideracoes_tec",
                    django_ckeditor_5.fields.CKEditor5Field(
                        blank=True, null=True, verbose_name="Considerações Técnicas"
                    ),
                ),
                ("assinado_em", models.DateTimeField(auto_now_add=True)),
                (
                    "data_assinatura",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Data da assinatura"
                    ),
                ),
                (
                    "assinatura_nome",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="Nome da assinatura",
                    ),
                ),
                (
                    "assinatura_cn",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="CN da assinatura (email)",
                    ),
                ),
            ],
            options={
                "verbose_name": "Avaliação Técnica",
                "verbose_name_plural": "Avaliações Técnicas",
            },
        ),
        migrations.CreateModel(
            name="BlocoFerramenta",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("numero", models.CharField(max_length=50, verbose_name="Bloco")),
            ],
        ),
        migrations.CreateModel(
            name="CentroDeCusto",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nome",
                    models.CharField(max_length=100, verbose_name="Centro de Custo"),
                ),
                (
                    "custo_atual",
                    models.DecimalField(
                        decimal_places=2, max_digits=12, verbose_name="Custo do Setor"
                    ),
                ),
                ("vigencia", models.DateField(verbose_name="Início da Vigência")),
                (
                    "observacao",
                    django_ckeditor_5.fields.CKEditor5Field(
                        blank=True,
                        null=True,
                        verbose_name="Particularidades do cliente",
                    ),
                ),
                ("atualizado_em", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Centro de Custo",
                "verbose_name_plural": "Centros de Custo",
                "ordering": ["nome"],
            },
        ),
        migrations.CreateModel(
            name="Cliente",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("razao_social", models.CharField(max_length=255)),
                ("cnpj", models.CharField(max_length=18, unique=True)),
                ("endereco", models.CharField(max_length=255)),
                ("numero", models.CharField(max_length=10)),
                ("bairro", models.CharField(max_length=100)),
                ("cidade", models.CharField(max_length=100)),
                ("cep", models.CharField(max_length=9)),
                ("uf", models.CharField(max_length=2)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Ativo", "Ativo"),
                            ("Inativo", "Inativo"),
                            ("Reativado", "Reativado"),
                        ],
                        default="Ativo",
                        max_length=10,
                    ),
                ),
                (
                    "tipo_cliente",
                    models.CharField(
                        choices=[
                            ("Automotivo", "Automotivo"),
                            ("Não Automotivo", "Não Automotivo"),
                            ("Reposição", "Reposição"),
                            ("Transportadora", "Transportadora"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "tipo_cadastro",
                    models.CharField(
                        choices=[
                            ("Cliente", "Cliente"),
                            ("Transportadora", "Transportadora"),
                        ],
                        default="Cliente",
                        max_length=20,
                    ),
                ),
                ("ie", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "complemento",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("telefone", models.CharField(blank=True, max_length=100, null=True)),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                (
                    "logotipo",
                    models.ImageField(
                        blank=True, null=True, upload_to="logos_clientes/"
                    ),
                ),
                ("coleta", models.BooleanField(default=False, verbose_name="Coleta")),
                (
                    "nome_contato",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "email_contato",
                    models.EmailField(blank=True, max_length=254, null=True),
                ),
                (
                    "telefone_contato",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "cargo_contato",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "departamento_contato",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "icms",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                ("cfop", models.CharField(blank=True, max_length=10, null=True)),
                (
                    "cond_pagamento",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("cod_bm", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "observacao",
                    django_ckeditor_5.fields.CKEditor5Field(
                        blank=True,
                        null=True,
                        verbose_name="Particularidades do cliente",
                    ),
                ),
                (
                    "status_adimplencia",
                    models.CharField(
                        choices=[
                            ("Adimplente", "Adimplente"),
                            ("Inadimplente", "Inadimplente"),
                        ],
                        default="Adimplente",
                        max_length=20,
                        verbose_name="Status de Adimplência",
                    ),
                ),
                (
                    "comprovante_adimplencia",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="comprovantes_adimplencia/",
                        verbose_name="Comprovante de Adimplência (PDF)",
                    ),
                ),
                (
                    "atualizado_em",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ClienteDocumento",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tipo",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Cartao IPI", "Cartão IPI"),
                            ("Alteracao de CNPJ", "Alteração de CNPJ"),
                            ("Outros", "Outros"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "arquivo",
                    models.FileField(
                        blank=True, null=True, upload_to="documentos_clientes/"
                    ),
                ),
                ("data_upload", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="Cotacao",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "data_abertura",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="Data de Abertura",
                    ),
                ),
                (
                    "tipo",
                    models.CharField(
                        choices=[("Atualização", "Atualização"), ("Novo", "Novo")],
                        max_length=12,
                        verbose_name="Tipo de Cotação",
                    ),
                ),
                (
                    "frete",
                    models.CharField(
                        choices=[("CIF", "CIF"), ("FOB", "FOB")],
                        max_length=3,
                        verbose_name="Frete",
                    ),
                ),
                (
                    "observacoes",
                    django_ckeditor_5.fields.CKEditor5Field(
                        blank=True, null=True, verbose_name="Observações"
                    ),
                ),
                (
                    "cond_pagamento",
                    models.CharField(
                        max_length=100, verbose_name="Condição de Pagamento"
                    ),
                ),
                (
                    "icms",
                    models.DecimalField(
                        decimal_places=2, max_digits=5, verbose_name="ICMS (%)"
                    ),
                ),
                (
                    "validade_proposta",
                    models.PositiveIntegerField(
                        default=30,
                        help_text="Número de dias de validade da proposta a partir da data de abertura.",
                        verbose_name="Validade da proposta (dias)",
                    ),
                ),
                (
                    "data_envio_proposta",
                    models.DateField(
                        blank=True,
                        help_text="Data em que a proposta foi efetivamente gerada/enviada.",
                        null=True,
                        verbose_name="Data de Envio da Proposta",
                    ),
                ),
            ],
            options={
                "verbose_name": "Cotação",
                "verbose_name_plural": "Cotações",
            },
        ),
        migrations.CreateModel(
            name="CotacaoFerramenta",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "observacoes",
                    django_ckeditor_5.fields.CKEditor5Field(
                        blank=True, null=True, verbose_name="Observações da Ferramenta"
                    ),
                ),
                ("assinado_em", models.DateTimeField(auto_now_add=True)),
                (
                    "data_assinatura",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Data da assinatura"
                    ),
                ),
                (
                    "assinatura_nome",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="Nome da assinatura",
                    ),
                ),
                (
                    "assinatura_cn",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="CN da assinatura (email)",
                    ),
                ),
            ],
            options={
                "verbose_name": "Ferramenta na Cotação",
                "verbose_name_plural": "Ferramentas na Cotação",
            },
        ),
        migrations.CreateModel(
            name="Desenvolvimento",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "completo",
                    models.BooleanField(
                        default=False, verbose_name="Tudo preenchido corretamente?"
                    ),
                ),
                (
                    "consideracoes",
                    django_ckeditor_5.fields.CKEditor5Field(
                        blank=True, null=True, verbose_name="Considerações Finais"
                    ),
                ),
                ("assinado_em", models.DateTimeField(auto_now_add=True)),
                (
                    "data_assinatura",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Data da assinatura"
                    ),
                ),
                (
                    "assinatura_nome",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="Nome da assinatura",
                    ),
                ),
                (
                    "assinatura_cn",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="CN da assinatura (email)",
                    ),
                ),
            ],
            options={
                "verbose_name": "Desenvolvimento da Cotação",
                "verbose_name_plural": "Desenvolvimentos da Cotação",
            },
        ),
        migrations.CreateModel(
            name="Ferramenta",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("codigo", models.CharField(max_length=20, unique=True)),
                ("descricao", models.CharField(max_length=255)),
                (
                    "vida_util_em_pecas",
                    models.PositiveIntegerField(verbose_name="Vida útil (em peças)"),
                ),
                (
                    "desenho_pdf",
                    models.FileField(
                        blank=True, null=True, upload_to="ferramentas/desenhos/"
                    ),
                ),
                (
                    "tipo",
                    models.CharField(
                        choices=[
                            ("Nova", "Ferramenta Nova"),
                            ("Adpt", "Adaptação"),
                            ("Disp", "Dispositivo"),
                            ("Outro", "Outros"),
                        ],
                        max_length=10,
                    ),
                ),
                ("observacoes", models.TextField(blank=True, null=True)),
                (
                    "token_cotacao",
                    models.UUIDField(
                        blank=True, default=uuid.uuid4, editable=False, null=True
                    ),
                ),
                ("cotacao_enviada_em", models.DateTimeField(blank=True, null=True)),
                (
                    "passo",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Passo",
                    ),
                ),
                (
                    "largura_tira",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Largura da Tira / Perímetro de Corte",
                    ),
                ),
                (
                    "num_matrizes",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Número de Matrizes"
                    ),
                ),
                (
                    "num_puncoes",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Número de Punções"
                    ),
                ),
                (
                    "num_carros",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Número de Carros"
                    ),
                ),
                (
                    "num_formadores",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Número de Formadores"
                    ),
                ),
                (
                    "valor_unitario_matriz",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "valor_unitario_puncao",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "valor_unitario_flange",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "valor_unitario_carros",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "valor_unitario_formadores",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "peso_sae_kg",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=10,
                        null=True,
                        verbose_name="Peso SAE 1020 (Kg)",
                    ),
                ),
                (
                    "valor_unitario_sae",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Valor Unitário SAE 1020 (R$/Kg)",
                    ),
                ),
                (
                    "peso_vnd_kg",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=10,
                        null=True,
                        verbose_name="Peso VND (Kg)",
                    ),
                ),
                (
                    "valor_unitario_vnd",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Valor Unitário VND (R$/Kg)",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="HistoricoCustoCentroDeCusto",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "custo_anterior",
                    models.DecimalField(decimal_places=2, max_digits=12),
                ),
                ("novo_custo", models.DecimalField(decimal_places=2, max_digits=12)),
                ("alterado_em", models.DateTimeField()),
            ],
            options={
                "verbose_name": "Histórico de Custo",
                "verbose_name_plural": "Históricos de Custo",
                "ordering": ["-alterado_em"],
            },
        ),
        migrations.CreateModel(
            name="IndicadorComercialRegistroMensal",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "indicador",
                    models.CharField(
                        choices=[
                            ("4.1", "Atendimento do Prazo de Cotação"),
                            ("4.2", "Número de Itens Novos Vendidos"),
                            ("4.3", "Número de Cotações por Funcionário"),
                            ("4.4", "Taxa de Orçamentos Aprovados"),
                        ],
                        max_length=10,
                    ),
                ),
                ("ano", models.IntegerField()),
                ("mes", models.IntegerField(blank=True, null=True)),
                ("trimestre", models.IntegerField(blank=True, null=True)),
                ("valor", models.FloatField()),
                ("media", models.FloatField()),
                ("meta", models.FloatField()),
                ("total_realizados", models.IntegerField(default=0)),
                ("total_aprovados", models.IntegerField(default=0)),
                ("comentario", models.TextField(blank=True)),
                ("criado_em", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Registro de Indicador Comercial",
                "verbose_name_plural": "Registros de Indicadores Comerciais",
            },
        ),
        migrations.CreateModel(
            name="Item",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tipo_item",
                    models.CharField(
                        choices=[("Cotacao", "Cotação"), ("Corrente", "Corrente")],
                        default="Cotacao",
                        max_length=20,
                        verbose_name="Tipo de Item",
                    ),
                ),
                (
                    "codigo",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="Código Interno"
                    ),
                ),
                (
                    "descricao",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Descrição"
                    ),
                ),
                (
                    "ncm",
                    models.CharField(
                        blank=True, max_length=10, null=True, verbose_name="NCM"
                    ),
                ),
                (
                    "lote_minimo",
                    models.PositiveIntegerField(verbose_name="Lote Mínimo"),
                ),
                (
                    "codigo_cliente",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Código no Cliente",
                    ),
                ),
                (
                    "descricao_cliente",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Descrição no Cliente",
                    ),
                ),
                (
                    "ipi",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="IPI (%)",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("Ativo", "Ativo"), ("Inativo", "Inativo")],
                        default="Ativo",
                        max_length=10,
                        verbose_name="Status",
                    ),
                ),
                (
                    "seguranca_mp",
                    models.BooleanField(default=False, verbose_name="Possui MP"),
                ),
                (
                    "seguranca_ts",
                    models.BooleanField(default=False, verbose_name="Possui TS"),
                ),
                (
                    "seguranca_m1",
                    models.BooleanField(default=False, verbose_name="Possui M1"),
                ),
                (
                    "seguranca_l1",
                    models.BooleanField(default=False, verbose_name="Possui L1"),
                ),
                (
                    "seguranca_l2",
                    models.BooleanField(default=False, verbose_name="Possui L2"),
                ),
                (
                    "simbolo_mp",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="itens/simbolos/",
                        verbose_name="Imagem MP",
                    ),
                ),
                (
                    "simbolo_ts",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="itens/simbolos/",
                        verbose_name="Imagem TS",
                    ),
                ),
                (
                    "simbolo_m1",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="itens/simbolos/",
                        verbose_name="Imagem M1",
                    ),
                ),
                (
                    "simbolo_l1",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="itens/simbolos/",
                        verbose_name="Imagem L1",
                    ),
                ),
                (
                    "simbolo_l2",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="itens/simbolos/",
                        verbose_name="Imagem L2",
                    ),
                ),
                (
                    "automotivo_oem",
                    models.BooleanField(default=False, verbose_name="Automotivo OEM"),
                ),
                (
                    "requisito_especifico",
                    models.BooleanField(
                        default=False, verbose_name="Requisito Específico Cliente?"
                    ),
                ),
                (
                    "item_seguranca",
                    models.BooleanField(
                        default=False, verbose_name="É Item de Segurança?"
                    ),
                ),
                (
                    "codigo_desenho",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Código do Desenho",
                    ),
                ),
                (
                    "codigo_amostra",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Código de Amostra",
                    ),
                ),
                (
                    "desenho",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="itens/desenhos/",
                        verbose_name="Desenho",
                    ),
                ),
                (
                    "revisao",
                    models.CharField(
                        blank=True, max_length=10, null=True, verbose_name="Revisão"
                    ),
                ),
                (
                    "data_revisao",
                    models.DateField(
                        blank=True, null=True, verbose_name="Data da Revisão"
                    ),
                ),
                ("criado_em", models.DateTimeField(auto_now_add=True)),
                ("atualizado_em", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["cliente", "codigo"],
            },
        ),
        migrations.CreateModel(
            name="ItemBloco",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "numero_item",
                    models.CharField(max_length=20, verbose_name="Nº Item"),
                ),
                (
                    "medidas",
                    models.CharField(
                        max_length=100, verbose_name="Medidas (ex: 25,4x94x165)"
                    ),
                ),
                (
                    "material",
                    models.CharField(
                        choices=[("SAE 1020", "SAE 1020"), ("VND", "VND")],
                        max_length=50,
                        verbose_name="Material",
                    ),
                ),
                (
                    "peso_aco",
                    models.DecimalField(
                        decimal_places=2,
                        default=7.86,
                        max_digits=5,
                        verbose_name="Peso Aço",
                    ),
                ),
                (
                    "volume",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Volume",
                    ),
                ),
                (
                    "peso_total",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Peso Total",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MaoDeObraFerramenta",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tipo",
                    models.CharField(
                        choices=[
                            ("Ferramentaria", "Ferramentaria"),
                            ("Projeto", "Projeto"),
                            ("Externa", "MO Externa"),
                        ],
                        max_length=20,
                    ),
                ),
                ("horas", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "valor_hora",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="OrdemDesenvolvimento",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "numero",
                    models.PositiveIntegerField(
                        editable=False, unique=True, verbose_name="Nº Ordem"
                    ),
                ),
                (
                    "email_ppap",
                    models.EmailField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name="E-mail para envio PPAP",
                    ),
                ),
                (
                    "codigo_brasmol",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Código Bras-Mol",
                    ),
                ),
                (
                    "prazo_solicitado",
                    models.DateField(
                        blank=True, null=True, verbose_name="Prazo solicitado"
                    ),
                ),
                (
                    "qtde_amostra",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Quantidade de amostra"
                    ),
                ),
                (
                    "codigo_amostra",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Código da Amostra",
                    ),
                ),
                (
                    "razao",
                    models.CharField(
                        choices=[
                            ("novo", "Novo item"),
                            ("discrepancia", "Correção de discrepância"),
                            ("transferencia", "Transferência para outro cliente"),
                            ("especificacao", "Alteração de especificação"),
                            ("fornecedor", "Alteração de fornecedor"),
                            ("revalidacao", "Atualização/Revalidação"),
                            ("ferramental", "Alteração de ferramental"),
                            ("processo", "Alteração de processo"),
                            ("amostras", "Amostras"),
                        ],
                        max_length=30,
                        verbose_name="Razão do desenvolvimento",
                    ),
                ),
                (
                    "automotivo_oem",
                    models.BooleanField(default=False, verbose_name="Automotivo OEM"),
                ),
                (
                    "comprador",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Comprador"
                    ),
                ),
                (
                    "requisito_especifico",
                    models.BooleanField(
                        default=False, verbose_name="Requisito Específico Cliente?"
                    ),
                ),
                (
                    "item_seguranca",
                    models.BooleanField(
                        default=False, verbose_name="É Item de Segurança?"
                    ),
                ),
                (
                    "codigo_desenho",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Código do Desenho",
                    ),
                ),
                (
                    "revisao",
                    models.CharField(
                        blank=True, max_length=10, null=True, verbose_name="Revisão"
                    ),
                ),
                (
                    "data_revisao",
                    models.DateField(
                        blank=True, null=True, verbose_name="Data da Revisão"
                    ),
                ),
                (
                    "metodologia_aprovacao",
                    models.CharField(
                        blank=True,
                        max_length=30,
                        null=True,
                        verbose_name="Metodologia de aprovação",
                    ),
                ),
                (
                    "observacao",
                    django_ckeditor_5.fields.CKEditor5Field(
                        blank=True, null=True, verbose_name="Observações"
                    ),
                ),
                (
                    "familia_produto",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("MCGC", "Mola de Compressão Grupo C"),
                            ("MCGD", "Mola de Compressão Grupo D"),
                            ("MTRAGC", "Mola de Tração Grupo C"),
                            ("MTRAGX", "Mola de Tração Grupo X"),
                            ("MTRAGD", "Mola de Tração Grupo D"),
                            ("MTORGC", "Mola de Torção Grupo C"),
                            ("MTORGX", "Mola de Torção Grupo X"),
                            ("MTORGD", "Mola de Torção Grupo D"),
                            ("PEGE", "Peças Estampadas Grupo E"),
                            ("PEGP", "Peças Estampadas Grupo P"),
                            ("HGD", "Hastes Grupo D"),
                            ("HGM", "Hastes Grupo M"),
                            ("HGE", "Hastes Grupo E"),
                            ("HGC", "Hastes Grupo C"),
                            ("AGC", "Anel Grupo C"),
                            ("AGD", "Anel Grupo D"),
                            ("AGE", "Anel Grupo E"),
                            ("PGC", "Pino Grupo C"),
                            ("PGE", "Pino Grupo E"),
                        ],
                        max_length=6,
                        null=True,
                        verbose_name="Família de Produto",
                    ),
                ),
                (
                    "material",
                    models.CharField(
                        blank=True,
                        choices=[("usual", "Usual"), ("novo", "Novo")],
                        max_length=10,
                        null=True,
                        verbose_name="Material",
                    ),
                ),
                (
                    "revisar_pir",
                    models.CharField(
                        blank=True,
                        choices=[("sim", "Sim"), ("nao", "Não")],
                        max_length=3,
                        null=True,
                        verbose_name="Revisar PIR?",
                    ),
                ),
                (
                    "aprovado",
                    models.CharField(
                        blank=True,
                        choices=[("sim", "Sim"), ("nao", "Não"), ("na", "N/A")],
                        max_length=5,
                        null=True,
                        verbose_name="Aprovado?",
                    ),
                ),
                (
                    "prazo_material",
                    models.DateField(
                        blank=True, null=True, verbose_name="Prazo Material"
                    ),
                ),
                (
                    "rotinas_sistema",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("roteiro", "Roteiro de operações"),
                            ("bloqueio", "Bloqueio"),
                            ("na", "N/A"),
                        ],
                        max_length=20,
                        null=True,
                        verbose_name="Rotinas do Sistema",
                    ),
                ),
                (
                    "prazo_rotinas",
                    models.DateField(
                        blank=True, null=True, verbose_name="Prazo Rotinas"
                    ),
                ),
                (
                    "documentos_producao",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Documentos de produção",
                    ),
                ),
                (
                    "prazo_docs",
                    models.DateField(
                        blank=True, null=True, verbose_name="Prazo Documentos"
                    ),
                ),
                (
                    "ferramenta",
                    models.CharField(
                        blank=True,
                        choices=[("sim", "Sim"), ("nao", "Não")],
                        max_length=3,
                        null=True,
                        verbose_name="Ferramenta",
                    ),
                ),
                (
                    "tipo_ferramenta",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("nova", "Nova"),
                            ("adaptacao", "Adaptação"),
                            ("outros", "Outros"),
                        ],
                        max_length=15,
                        null=True,
                        verbose_name="Tipo Ferramenta",
                    ),
                ),
                (
                    "os_ferramenta",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Nº OS Ferramenta"
                    ),
                ),
                (
                    "prazo_ferramental",
                    models.DateField(
                        blank=True, null=True, verbose_name="Prazo Ferramental"
                    ),
                ),
                (
                    "dispositivo",
                    models.CharField(
                        blank=True,
                        choices=[("sim", "Sim"), ("nao", "Não")],
                        max_length=3,
                        null=True,
                        verbose_name="Dispositivo",
                    ),
                ),
                (
                    "tipo_dispositivo",
                    models.CharField(
                        blank=True,
                        choices=[("medicao", "Medição"), ("auxiliar", "Auxiliar")],
                        max_length=15,
                        null=True,
                        verbose_name="Tipo Dispositivo",
                    ),
                ),
                (
                    "os_dispositivo",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Nº OS Dispositivo"
                    ),
                ),
                (
                    "prazo_dispositivo",
                    models.DateField(
                        blank=True, null=True, verbose_name="Prazo Dispositivo"
                    ),
                ),
                (
                    "amostra",
                    models.CharField(
                        blank=True,
                        choices=[("sim", "Sim"), ("nao", "Não")],
                        max_length=3,
                        null=True,
                        verbose_name="Amostra",
                    ),
                ),
                (
                    "numero_op",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Nº OP"
                    ),
                ),
                (
                    "prazo_amostra",
                    models.DateField(
                        blank=True, null=True, verbose_name="Prazo Amostra"
                    ),
                ),
                (
                    "tratamento_termico",
                    models.CharField(
                        blank=True,
                        choices=[("sim", "Sim"), ("nao", "Não")],
                        max_length=3,
                        null=True,
                        verbose_name="Trat. térmico externo",
                    ),
                ),
                (
                    "tipo_tte",
                    models.CharField(
                        blank=True,
                        choices=[("usual", "Usual"), ("novo", "Novo")],
                        max_length=10,
                        null=True,
                        verbose_name="Tipo TTE",
                    ),
                ),
                (
                    "status_tte",
                    models.CharField(
                        blank=True,
                        choices=[("sim", "Sim"), ("nao", "Não"), ("na", "N/A")],
                        max_length=10,
                        null=True,
                        verbose_name="Status TTE",
                    ),
                ),
                (
                    "prazo_tte",
                    models.DateField(blank=True, null=True, verbose_name="Prazo TTE"),
                ),
                (
                    "tratamento_superficial",
                    models.CharField(
                        blank=True,
                        choices=[("sim", "Sim"), ("nao", "Não")],
                        max_length=3,
                        null=True,
                        verbose_name="Trat. superficial externo",
                    ),
                ),
                (
                    "tipo_tse",
                    models.CharField(
                        blank=True,
                        choices=[("usual", "Usual"), ("novo", "Novo")],
                        max_length=10,
                        null=True,
                        verbose_name="Tipo TSE",
                    ),
                ),
                (
                    "status_tse",
                    models.CharField(
                        blank=True,
                        choices=[("sim", "Sim"), ("nao", "Não"), ("na", "N/A")],
                        max_length=10,
                        null=True,
                        verbose_name="Status TSE",
                    ),
                ),
                (
                    "prazo_tse",
                    models.DateField(blank=True, null=True, verbose_name="Prazo TSE"),
                ),
                (
                    "resistencia_corrosao",
                    models.CharField(
                        blank=True,
                        choices=[("sim", "Sim"), ("nao", "Não")],
                        max_length=3,
                        null=True,
                        verbose_name="Resistência à corrosão",
                    ),
                ),
                (
                    "requisito_resistencia",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Requisito resistência",
                    ),
                ),
                (
                    "prazo_resistencia",
                    models.DateField(
                        blank=True, null=True, verbose_name="Prazo resistência"
                    ),
                ),
                (
                    "durabilidade",
                    models.CharField(
                        blank=True,
                        choices=[("sim", "Sim"), ("nao", "Não")],
                        max_length=3,
                        null=True,
                        verbose_name="Durabilidade/Ciclagem",
                    ),
                ),
                (
                    "requisito_durabilidade",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Requisito durabilidade",
                    ),
                ),
                (
                    "prazo_durabilidade",
                    models.DateField(
                        blank=True, null=True, verbose_name="Prazo durabilidade"
                    ),
                ),
                (
                    "observacao_geral",
                    django_ckeditor_5.fields.CKEditor5Field(
                        blank=True, null=True, verbose_name="Observações gerais"
                    ),
                ),
                (
                    "assinatura_comercial_nome",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="Assinatura Comercial – Nome",
                    ),
                ),
                (
                    "assinatura_comercial_email",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="Assinatura Comercial – E-mail (CN)",
                    ),
                ),
                (
                    "assinatura_comercial_data",
                    models.DateTimeField(
                        blank=True,
                        null=True,
                        verbose_name="Assinatura Comercial – Data",
                    ),
                ),
                (
                    "assinatura_tecnica_nome",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="Assinatura Técnica – Nome",
                    ),
                ),
                (
                    "assinatura_tecnica_email",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="Assinatura Técnica – E-mail (CN)",
                    ),
                ),
                (
                    "assinatura_tecnica_data",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Assinatura Técnica – Data"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PreCalculo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "numero",
                    models.PositiveIntegerField(
                        editable=False, verbose_name="Número do Pré-Cálculo"
                    ),
                ),
                ("criado_em", models.DateTimeField(auto_now_add=True)),
                (
                    "observacoes_materiais",
                    django_ckeditor_5.fields.CKEditor5Field(
                        blank=True,
                        null=True,
                        verbose_name="Observações gerais de materiais",
                    ),
                ),
                (
                    "observacoes_servicos",
                    django_ckeditor_5.fields.CKEditor5Field(
                        blank=True,
                        null=True,
                        verbose_name="Observações gerais de serviços",
                    ),
                ),
                (
                    "observacoes_roteiro",
                    django_ckeditor_5.fields.CKEditor5Field(
                        blank=True, null=True, verbose_name="Observações da Etapa"
                    ),
                ),
                (
                    "preco_selecionado",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        max_digits=12,
                        null=True,
                        verbose_name="Preço Final Selecionado (R$)",
                    ),
                ),
                (
                    "preco_manual",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        max_digits=12,
                        null=True,
                        verbose_name="Preço Final Manual (R$)",
                    ),
                ),
                (
                    "observacoes_precofinal",
                    django_ckeditor_5.fields.CKEditor5Field(
                        blank=True,
                        null=True,
                        verbose_name="Observações sobre o Preço Final",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PreCalculoMaterial",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "nome_materia_prima",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        null=True,
                        verbose_name="Nome da Matéria-prima",
                    ),
                ),
                ("codigo", models.CharField(max_length=50, verbose_name="Código")),
                (
                    "descricao",
                    models.CharField(
                        blank=True, max_length=300, null=True, verbose_name="Descrição"
                    ),
                ),
                (
                    "unidade",
                    models.CharField(
                        blank=True, max_length=20, null=True, verbose_name="Unidade"
                    ),
                ),
                (
                    "lote_minimo",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Lote Mínimo"
                    ),
                ),
                (
                    "entrega_dias",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Entrega (dias)"
                    ),
                ),
                (
                    "icms",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="ICMS (%)",
                    ),
                ),
                (
                    "tipo_material",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Tipo de Material",
                    ),
                ),
                ("selecionado", models.BooleanField(default=False)),
                (
                    "desenvolvido_mm",
                    models.DecimalField(
                        decimal_places=4, max_digits=8, verbose_name="Desenvolvido (mm)"
                    ),
                ),
                (
                    "peso_liquido",
                    models.DecimalField(
                        decimal_places=7,
                        max_digits=20,
                        verbose_name="Peso Líquido (kg)",
                    ),
                ),
                (
                    "peso_bruto",
                    models.DecimalField(
                        decimal_places=7, max_digits=20, verbose_name="Peso Bruto (kg)"
                    ),
                ),
                (
                    "peso_bruto_total",
                    models.DecimalField(
                        blank=True,
                        decimal_places=7,
                        max_digits=20,
                        null=True,
                        verbose_name="Peso Bruto Total (kg)",
                    ),
                ),
                (
                    "preco_kg",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        max_digits=12,
                        null=True,
                        verbose_name="Preço /kg",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("aguardando", "Aguardando Cotação"), ("ok", "OK")],
                        default="aguardando",
                        max_length=20,
                        verbose_name="Status da Cotação",
                    ),
                ),
                ("assinado_em", models.DateTimeField(auto_now_add=True)),
                (
                    "data_assinatura",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Data da assinatura"
                    ),
                ),
                (
                    "assinatura_nome",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="Nome da assinatura",
                    ),
                ),
                (
                    "assinatura_cn",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="CN da assinatura (email)",
                    ),
                ),
            ],
            options={
                "verbose_name": "Pré-Cálculo Matéria-Prima",
                "verbose_name_plural": "Materiais Pré-Cálculo",
            },
        ),
        migrations.CreateModel(
            name="ViabilidadeAnaliseRisco",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "numero",
                    models.PositiveIntegerField(
                        editable=False, unique=True, verbose_name="Nº Viabilidade"
                    ),
                ),
                (
                    "requisito_especifico",
                    models.BooleanField(
                        default=False, verbose_name="Requisito Específico Cliente?"
                    ),
                ),
                (
                    "automotivo_oem",
                    models.BooleanField(default=False, verbose_name="Automotivo OEM?"),
                ),
                (
                    "item_seguranca",
                    models.BooleanField(
                        default=False, verbose_name="É Item de Segurança?"
                    ),
                ),
                (
                    "codigo_desenho",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Código do Desenho",
                    ),
                ),
                (
                    "revisao",
                    models.CharField(
                        blank=True, max_length=10, null=True, verbose_name="Revisão"
                    ),
                ),
                (
                    "data_desenho",
                    models.DateField(
                        blank=True, null=True, verbose_name="Data do Desenho"
                    ),
                ),
                (
                    "codigo_brasmol",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Código Bras-Mol",
                    ),
                ),
                (
                    "produto_definido",
                    models.BooleanField(
                        default=False,
                        verbose_name="O produto está devidamente definido (incluindo requisitos de aplicação, etc.) possibilitando a avaliação da viabilidade?",
                    ),
                ),
                (
                    "risco_comercial",
                    models.BooleanField(
                        default=False,
                        verbose_name="Existe algum risco comercial relevante aplicável a este produto e respectivo fornecimento, além do item apresentado acima?",
                    ),
                ),
                (
                    "assinatura_comercial_nome",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="Responsável Comercial – Nome",
                    ),
                ),
                (
                    "assinatura_comercial_departamento",
                    models.CharField(
                        blank=True,
                        default="COMERCIAL",
                        max_length=50,
                        null=True,
                        verbose_name="Departamento",
                    ),
                ),
                (
                    "assinatura_comercial_data",
                    models.DateTimeField(blank=True, null=True),
                ),
                (
                    "conclusao_comercial",
                    models.CharField(
                        choices=[
                            ("viavel", "Viável"),
                            ("alteracoes", "Viável com alterações"),
                            ("inviavel", "Inviável"),
                        ],
                        max_length=30,
                        verbose_name="Conclusão Comercial",
                    ),
                ),
                (
                    "consideracoes_comercial",
                    django_ckeditor_5.fields.CKEditor5Field(
                        blank=True, null=True, verbose_name="Considerações Comerciais"
                    ),
                ),
                (
                    "capacidade_fabricacao",
                    models.BooleanField(
                        default=False,
                        verbose_name="Existe capacidade adequada para fabricação?",
                    ),
                ),
                (
                    "custo_transformacao",
                    models.BooleanField(
                        default=False,
                        verbose_name="Custo com equipamentos de transformação?",
                    ),
                ),
                (
                    "custo_ferramental",
                    models.BooleanField(
                        default=False, verbose_name="Custo com ferramental?"
                    ),
                ),
                (
                    "metodo_alternativo",
                    models.BooleanField(
                        default=False, verbose_name="Método alternativo de manufatura?"
                    ),
                ),
                (
                    "risco_logistico",
                    models.BooleanField(
                        default=False, verbose_name="Risco logístico relevante?"
                    ),
                ),
                (
                    "conclusao_custos",
                    models.CharField(
                        choices=[
                            ("viavel", "Viável"),
                            ("alteracoes", "Viável com alterações"),
                            ("inviavel", "Inviável"),
                        ],
                        max_length=30,
                        verbose_name="Conclusão Custos",
                    ),
                ),
                (
                    "consideracoes_custos",
                    django_ckeditor_5.fields.CKEditor5Field(
                        blank=True, null=True, verbose_name="Considerações de Custos"
                    ),
                ),
                (
                    "responsavel_custos",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="Responsável Custos",
                    ),
                ),
                (
                    "departamento_custos",
                    models.CharField(
                        default="CUSTOS", max_length=100, verbose_name="Departamento"
                    ),
                ),
                ("data_custos", models.DateTimeField(blank=True, null=True)),
                (
                    "recursos_suficientes",
                    models.BooleanField(
                        default=False,
                        verbose_name="Recursos suficientes para manufatura?",
                    ),
                ),
                (
                    "atende_especificacoes",
                    models.BooleanField(
                        default=False,
                        verbose_name="Especificações de engenharia atendidas?",
                    ),
                ),
                (
                    "atende_tolerancias",
                    models.BooleanField(
                        default=False,
                        verbose_name="Pode ser fabricado conforme desenho?",
                    ),
                ),
                (
                    "capacidade_processo",
                    models.BooleanField(
                        default=False,
                        verbose_name="Capacidade do processo é suficiente?",
                    ),
                ),
                (
                    "permite_manuseio",
                    models.BooleanField(
                        default=False,
                        verbose_name="Permite técnicas eficientes de manuseio?",
                    ),
                ),
                (
                    "precisa_cep",
                    models.BooleanField(
                        default=False,
                        verbose_name="Necessário controle estatístico do processo (CEP)?",
                    ),
                ),
                (
                    "cep_usado_similares",
                    models.BooleanField(
                        default=False, verbose_name="CEP já usado em similares?"
                    ),
                ),
                (
                    "processos_estaveis",
                    models.BooleanField(
                        default=False, verbose_name="Processos estão sob controle?"
                    ),
                ),
                (
                    "capabilidade_ok",
                    models.BooleanField(
                        default=False, verbose_name="Capabilidade atende requisitos?"
                    ),
                ),
                (
                    "atende_requisito_cliente",
                    models.BooleanField(
                        default=False,
                        verbose_name="Atende requisito específico do cliente?",
                    ),
                ),
                (
                    "risco_tecnico",
                    models.BooleanField(
                        default=False, verbose_name="Risco técnico relevante?"
                    ),
                ),
                (
                    "conclusao_tecnica",
                    models.CharField(
                        choices=[
                            ("viavel", "Viável"),
                            ("alteracoes", "Viável com alterações"),
                            ("inviavel", "Inviável"),
                        ],
                        max_length=30,
                        verbose_name="Conclusão Técnica",
                    ),
                ),
                (
                    "consideracoes_tecnicas",
                    django_ckeditor_5.fields.CKEditor5Field(
                        blank=True, null=True, verbose_name="Considerações Técnicas"
                    ),
                ),
                (
                    "responsavel_tecnica",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="Responsável Técnico",
                    ),
                ),
                (
                    "departamento_tecnica",
                    models.CharField(
                        default="TÉCNICO", max_length=100, verbose_name="Departamento"
                    ),
                ),
                ("data_tecnica", models.DateTimeField(blank=True, null=True)),
                ("criado_em", models.DateTimeField(auto_now_add=True)),
                ("atualizado_em", models.DateTimeField(auto_now=True)),
                (
                    "cliente",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="comercial.cliente",
                    ),
                ),
                (
                    "criado_por",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "precalculo",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="viabilidade_risco",
                        to="comercial.precalculo",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ServicoFerramenta",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tipo_servico",
                    models.CharField(
                        choices=[
                            ("Eletroerosao", "Eletro erosão"),
                            ("Rolamento", "Rolamento"),
                            ("Rolete", "Rolete"),
                            ("Taxa", "Taxa Administrativa"),
                            ("Tratamento", "Tratamento térmico"),
                        ],
                        max_length=20,
                    ),
                ),
                ("quantidade", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "valor_unitario",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "ferramenta",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="servicos",
                        to="comercial.ferramenta",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RoteiroCotacao",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                ("etapa", models.PositiveIntegerField(verbose_name="Etapa Nº")),
                (
                    "pph",
                    models.DecimalField(
                        decimal_places=4, max_digits=10, verbose_name="Peças por Hora"
                    ),
                ),
                (
                    "setup_minutos",
                    models.PositiveIntegerField(verbose_name="Tempo de Setup (min)"),
                ),
                (
                    "custo_hora",
                    models.DecimalField(
                        decimal_places=4, max_digits=12, verbose_name="Custo Hora"
                    ),
                ),
                (
                    "custo_total",
                    models.DecimalField(
                        decimal_places=4, max_digits=14, verbose_name="Custo Total"
                    ),
                ),
                (
                    "maquinas_roteiro",
                    models.TextField(
                        blank=True, null=True, verbose_name="Máquinas da Etapa"
                    ),
                ),
                (
                    "nome_acao",
                    models.TextField(
                        blank=True, null=True, verbose_name="Nome da Ação"
                    ),
                ),
                ("assinado_em", models.DateTimeField(auto_now_add=True)),
                (
                    "data_assinatura",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Data da assinatura"
                    ),
                ),
                (
                    "assinatura_nome",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="Nome da assinatura",
                    ),
                ),
                (
                    "assinatura_cn",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="CN da assinatura (email)",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Criado por",
                    ),
                ),
                (
                    "precalculo",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="roteiro_item",
                        to="comercial.precalculo",
                    ),
                ),
                (
                    "setor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="comercial.centrodecusto",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Atualizado por",
                    ),
                ),
                (
                    "usuario",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Roteiro na Cotação",
                "verbose_name_plural": "Roteiros na Cotação",
            },
        ),
        migrations.CreateModel(
            name="RegrasCalculo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "icms",
                    models.DecimalField(
                        decimal_places=2, max_digits=5, verbose_name="ICMS (%)"
                    ),
                ),
                (
                    "pis",
                    models.DecimalField(
                        decimal_places=2, max_digits=5, verbose_name="PIS (%)"
                    ),
                ),
                (
                    "confins",
                    models.DecimalField(
                        decimal_places=2, max_digits=5, verbose_name="Cofins (%)"
                    ),
                ),
                (
                    "ir",
                    models.DecimalField(
                        decimal_places=2, max_digits=5, verbose_name="IR (%)"
                    ),
                ),
                (
                    "csll",
                    models.DecimalField(
                        decimal_places=2, max_digits=5, verbose_name="CSLL (%)"
                    ),
                ),
                (
                    "df",
                    models.DecimalField(
                        decimal_places=2, max_digits=5, verbose_name="DF (%)"
                    ),
                ),
                (
                    "dv",
                    models.DecimalField(
                        decimal_places=2, max_digits=5, verbose_name="DV (%)"
                    ),
                ),
                ("assinado_em", models.DateTimeField(auto_now_add=True)),
                (
                    "data_assinatura",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Data da assinatura"
                    ),
                ),
                (
                    "assinatura_nome",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="Nome da assinatura",
                    ),
                ),
                (
                    "assinatura_cn",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="CN da assinatura (email)",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Criado por",
                    ),
                ),
                (
                    "precalculo",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="regras_calculo_item",
                        to="comercial.precalculo",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Atualizado por",
                    ),
                ),
                (
                    "usuario",
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Regras de Cálculo",
                "verbose_name_plural": "Regras de Cálculo",
            },
        ),
        migrations.CreateModel(
            name="PreCalculoServicoExterno",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "nome_insumo",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        null=True,
                        verbose_name="Nome do Insumo",
                    ),
                ),
                (
                    "codigo_materia_prima",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="Código MP"
                    ),
                ),
                (
                    "descricao_materia_prima",
                    models.CharField(
                        blank=True,
                        max_length=300,
                        null=True,
                        verbose_name="Descrição MP",
                    ),
                ),
                (
                    "unidade",
                    models.CharField(
                        blank=True, max_length=20, null=True, verbose_name="Unidade MP"
                    ),
                ),
                (
                    "lote_minimo",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Lote Mínimo"
                    ),
                ),
                (
                    "entrega_dias",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Entrega (dias)"
                    ),
                ),
                (
                    "icms",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="ICMS (%)",
                    ),
                ),
                (
                    "desenvolvido_mm",
                    models.DecimalField(
                        decimal_places=2, max_digits=8, verbose_name="Desenvolvido (mm)"
                    ),
                ),
                (
                    "peso_liquido",
                    models.DecimalField(
                        decimal_places=7,
                        max_digits=20,
                        verbose_name="Peso Líquido (kg)",
                    ),
                ),
                (
                    "peso_bruto",
                    models.DecimalField(
                        decimal_places=7, max_digits=20, verbose_name="Peso Bruto (kg)"
                    ),
                ),
                (
                    "preco_kg",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        max_digits=12,
                        null=True,
                        verbose_name="Preço /kg",
                    ),
                ),
                ("selecionado", models.BooleanField(default=False)),
                (
                    "peso_bruto_total",
                    models.DecimalField(
                        blank=True,
                        decimal_places=7,
                        max_digits=20,
                        null=True,
                        verbose_name="Peso Bruto Total (kg)",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("aguardando", "Aguardando Cotação"), ("ok", "OK")],
                        default="aguardando",
                        max_length=20,
                        verbose_name="Status da Cotação",
                    ),
                ),
                ("assinado_em", models.DateTimeField(auto_now_add=True)),
                (
                    "data_assinatura",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Data da assinatura"
                    ),
                ),
                (
                    "assinatura_nome",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="Nome da assinatura",
                    ),
                ),
                (
                    "assinatura_cn",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="CN da assinatura (email)",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Criado por",
                    ),
                ),
                (
                    "fornecedor",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="qualidade_fornecimento.fornecedorqualificado",
                    ),
                ),
            ],
            options={
                "verbose_name": "Pré-Cálculo Serviço Externo",
                "verbose_name_plural": "Serviços Externos Pré-Cálculo",
            },
        ),
    ]
