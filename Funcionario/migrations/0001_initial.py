# Generated by Django 4.2.16 on 2025-07-04 14:41

import Funcionario.models.funcionario
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_ckeditor_5.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Atividade",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nome",
                    models.CharField(max_length=255, verbose_name="Nome da Atividade"),
                ),
            ],
            options={
                "verbose_name": "Atividade",
                "verbose_name_plural": "Atividades",
                "ordering": ["nome"],
            },
        ),
        migrations.CreateModel(
            name="AtualizacaoLida",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "data_leitura",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Data da Leitura"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Atualizações Lidas",
            },
        ),
        migrations.CreateModel(
            name="AtualizacaoSistema",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("titulo", models.CharField(max_length=100, verbose_name="Título")),
                (
                    "descricao",
                    django_ckeditor_5.fields.CKEditor5Field(verbose_name="Descrição"),
                ),
                ("previsao", models.DateField(verbose_name="Data de Previsão")),
                (
                    "versao",
                    models.CharField(
                        help_text="Informe no formato MAJOR.MINOR.PATCH (ex: 1.6.5)",
                        max_length=20,
                        verbose_name="Versão (ex: 1.6.5)",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("concluido", "Concluído"),
                            ("em_andamento", "Em andamento"),
                            ("cancelado", "Cancelado"),
                        ],
                        default="em_andamento",
                        max_length=15,
                        verbose_name="Status",
                    ),
                ),
                (
                    "data_termino",
                    models.DateField(
                        blank=True,
                        default=django.utils.timezone.now,
                        null=True,
                        verbose_name="Data de Término",
                    ),
                ),
                (
                    "arquivo_pdf",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="atualizacoes/",
                        verbose_name="Arquivo PDF",
                    ),
                ),
                (
                    "previa_versao",
                    django_ckeditor_5.fields.CKEditor5Field(
                        blank=True, null=True, verbose_name="Prévia da Versão"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Atualizações do Sistema",
                "ordering": ["-previsao"],
            },
        ),
        migrations.CreateModel(
            name="AvaliacaoAnual",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("data_avaliacao", models.DateField(verbose_name="Data da Avaliação")),
                (
                    "centro_custo",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Centro de Custo",
                    ),
                ),
                (
                    "postura_seg_trabalho",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Postura em Segurança do Trabalho",
                    ),
                ),
                (
                    "qualidade_produtividade",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Qualidade e Produtividade"
                    ),
                ),
                (
                    "trabalho_em_equipe",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Trabalho em Equipe"
                    ),
                ),
                (
                    "comprometimento",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Comprometimento"
                    ),
                ),
                (
                    "disponibilidade_para_mudancas",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Disponibilidade para Mudanças",
                    ),
                ),
                (
                    "disciplina",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Disciplina"
                    ),
                ),
                (
                    "rendimento_sob_pressao",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Rendimento sob Pressão"
                    ),
                ),
                (
                    "proatividade",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Proatividade"
                    ),
                ),
                (
                    "comunicacao",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Comunicação"
                    ),
                ),
                (
                    "assiduidade",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Assiduidade"
                    ),
                ),
                (
                    "avaliacao_global_avaliador",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Avaliação Global do Avaliador",
                    ),
                ),
                (
                    "avaliacao_global_avaliado",
                    models.TextField(
                        blank=True, null=True, verbose_name="Autoavaliação do Avaliado"
                    ),
                ),
                (
                    "anexo",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="avaliacoes/anual/",
                        verbose_name="Anexo",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Avaliações Anuais",
                "ordering": ["-data_avaliacao"],
            },
        ),
        migrations.CreateModel(
            name="AvaliacaoExperiencia",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("data_avaliacao", models.DateField(verbose_name="Data da Avaliação")),
                (
                    "gerencia",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Gerência"
                    ),
                ),
                (
                    "adaptacao_trabalho",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Adaptação ao Trabalho"
                    ),
                ),
                (
                    "interesse",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Interesse"
                    ),
                ),
                (
                    "relacionamento_social",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Relacionamento Social"
                    ),
                ),
                (
                    "capacidade_aprendizagem",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Capacidade de Aprendizagem"
                    ),
                ),
                (
                    "anexo",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="avaliacoes/experiencia/",
                        verbose_name="Anexo",
                    ),
                ),
                (
                    "observacoes",
                    models.TextField(blank=True, null=True, verbose_name="Observações"),
                ),
                (
                    "orientacao",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Orientação"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Avaliações de Experiência",
                "ordering": ["-data_avaliacao"],
            },
        ),
        migrations.CreateModel(
            name="AvaliacaoTreinamento",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("data_avaliacao", models.DateField(verbose_name="Data da Avaliação")),
                (
                    "periodo_avaliacao",
                    models.IntegerField(
                        default=60, verbose_name="Período da Avaliação (dias)"
                    ),
                ),
                (
                    "anexo",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="avaliacoes_treinamento/",
                        verbose_name="Comprovante/Anexo",
                    ),
                ),
                (
                    "pergunta_1",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (
                                1,
                                "Não possui conhecimento mínimo da metodologia para sua aplicação.",
                            ),
                            (
                                2,
                                "Apresenta deficiências nos conceitos, o que compromete a aplicação.",
                            ),
                            (
                                3,
                                "Possui noções básicas, mas necessita de acompanhamento e suporte na aplicação.",
                            ),
                            (
                                4,
                                "Possui domínio necessário da metodologia e a utiliza adequadamente.",
                            ),
                            (
                                5,
                                "Possui completo domínio e utiliza a metodologia com excelência.",
                            ),
                        ],
                        null=True,
                        verbose_name="Conhecimento da Metodologia",
                    ),
                ),
                (
                    "pergunta_2",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (1, "Está muito abaixo do esperado."),
                            (2, "Aplicação está abaixo do esperado."),
                            (3, "Aplicação é razoável, mas não dentro do esperado."),
                            (
                                4,
                                "Aplicação está adequada e corresponde às expectativas.",
                            ),
                            (5, "Aplicação excede as expectativas."),
                        ],
                        null=True,
                        verbose_name="Aplicação na Prática",
                    ),
                ),
                (
                    "pergunta_3",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (
                                1,
                                "Nenhum resultado foi obtido efetivamente até o momento.",
                            ),
                            (2, "As melhorias obtidas estão muito abaixo do esperado."),
                            (
                                3,
                                "As melhorias obtidas são consideráveis, mas não dentro do esperado.",
                            ),
                            (
                                4,
                                "As melhorias obtidas são boas e estão dentro do esperado.",
                            ),
                            (5, "As melhorias obtidas excederam as expectativas."),
                        ],
                        null=True,
                        verbose_name="Resultados Obtidos",
                    ),
                ),
                (
                    "descricao_melhorias",
                    models.TextField(
                        blank=True,
                        default="Nenhuma melhoria descrita",
                        verbose_name="Descrição das Melhorias",
                    ),
                ),
                (
                    "avaliacao_geral",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (1, "Pouco eficaz"),
                            (2, "Eficaz"),
                            (3, "Razoável"),
                            (4, "Bom"),
                            (5, "Muito eficaz"),
                        ],
                        null=True,
                        verbose_name="Avaliação Geral",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Avaliações de Treinamento",
                "ordering": ["-data_avaliacao"],
            },
        ),
        migrations.CreateModel(
            name="Cargo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nome",
                    models.CharField(max_length=100, verbose_name="Nome do Cargo"),
                ),
                ("numero_dc", models.CharField(max_length=4, verbose_name="Número DC")),
                (
                    "descricao_arquivo",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="cargos/",
                        verbose_name="Arquivo Descritivo",
                    ),
                ),
                (
                    "nivel",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (1, "Alta Direção / Conselho"),
                            (2, "Diretoria"),
                            (3, "Gerência Sênior"),
                            (4, "Gerência Média"),
                            (5, "Coordenação"),
                            (6, "Supervisão"),
                            (7, "Liderança Técnica"),
                            (8, "Analista / Técnico"),
                            (9, "Assistente / Auxiliar"),
                            (10, "Operacional"),
                        ],
                        default=10,
                        help_text="1 = Mais alto (Direção), 10 = Mais baixo (Operacional)",
                        verbose_name="Nível Hierárquico",
                    ),
                ),
                (
                    "responsabilidade_atividade_primaria",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Responsabilidade e Autoridade: (Atividade Primária)",
                    ),
                ),
                (
                    "responsabilidade_atividade_secundaria",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Responsabilidade e Autoridade: (Atividade Secundária)",
                    ),
                ),
                (
                    "educacao_minima",
                    models.TextField(
                        blank=True, null=True, verbose_name="Educação mínima"
                    ),
                ),
                (
                    "treinamento_externo",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Treinamento / Curso (Externo)",
                    ),
                ),
                (
                    "treinamento_interno_minimo",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Treinamento mínimo (interno)",
                    ),
                ),
                (
                    "experiencia_minima",
                    models.TextField(
                        blank=True, null=True, verbose_name="Experiência mínima"
                    ),
                ),
                (
                    "elaborador_data",
                    models.DateField(
                        default=django.utils.timezone.now,
                        verbose_name="Data de Elaboração",
                    ),
                ),
                (
                    "aprovador_data",
                    models.DateField(
                        default=django.utils.timezone.now,
                        verbose_name="Data de Aprovação",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Cargos",
                "ordering": ["nivel", "nome"],
            },
        ),
        migrations.CreateModel(
            name="Comunicado",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "data",
                    models.DateField(
                        default=django.utils.timezone.now,
                        verbose_name="Data do Comunicado",
                    ),
                ),
                ("assunto", models.CharField(max_length=100, verbose_name="Assunto")),
                ("descricao", models.TextField(verbose_name="Descrição")),
                (
                    "tipo",
                    models.CharField(
                        choices=[
                            ("Auditoria", "Auditoria"),
                            ("Conscientizacao", "Conscientização"),
                            ("Melhoria", "Melhoria"),
                            ("Organizacao/Processos", "Organização / Processos"),
                            ("Recursos Humanos", "Recursos Humanos"),
                            ("Visita de Cliente", "Visita de Cliente"),
                        ],
                        max_length=50,
                        verbose_name="Tipo do Comunicado",
                    ),
                ),
                (
                    "departamento_responsavel",
                    models.CharField(
                        max_length=100, verbose_name="Departamento Responsável"
                    ),
                ),
                (
                    "lista_assinaturas",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="assinaturas/",
                        verbose_name="Lista de Assinaturas",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Comunicados",
                "ordering": ["-data"],
            },
        ),
        migrations.CreateModel(
            name="Departamentos",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nome",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="Nome do Departamento"
                    ),
                ),
                (
                    "sigla",
                    models.CharField(max_length=30, unique=True, verbose_name="Sigla"),
                ),
                ("ativo", models.BooleanField(default=True, verbose_name="Ativo")),
            ],
            options={
                "verbose_name": "Departamento",
                "verbose_name_plural": "Departamentos",
                "ordering": ["nome"],
            },
        ),
        migrations.CreateModel(
            name="Documento",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nome",
                    models.CharField(max_length=100, verbose_name="Nome do Documento"),
                ),
                ("codigo", models.CharField(max_length=4, verbose_name="Código")),
                (
                    "arquivo",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="documentos/",
                        verbose_name="Arquivo",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("aprovado", "Aprovado"),
                            ("em_revisao", "Em Revisão"),
                            ("inativo", "Inativo"),
                        ],
                        default="em_revisao",
                        max_length=15,
                        verbose_name="Status",
                    ),
                ),
                (
                    "coleta",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Método de Coleta",
                    ),
                ),
                (
                    "recuperacao",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Método de Recuperação",
                    ),
                ),
                (
                    "arquivo_tipo",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("copia_fisica", "Cópia Física"),
                            ("copia_eletronica", "Cópia Eletrônica"),
                            ("copia_digitalizada", "Cópia Física / Cópia Digitalizada"),
                            ("pasta_az", "Cópia Física / Pasta A-Z"),
                            ("pasta_suspensa", "Cópia Física / Pasta Suspensa"),
                            (
                                "copia_eletronica_servidor",
                                "Cópia Eletrônica (Servidor / Sistema)",
                            ),
                            ("planilha_eletronica", "Planilha Eletrônica"),
                            ("numero", "Cópia Eletrônica / Número"),
                            ("copia_dupla", "Cópia Física / Cópia Eletrônica"),
                            ("copia_servidor", "Cópia Eletrônica / Servidor"),
                            (
                                "copia_az_fisica_eletronica",
                                "Cópia Eletrônica / Física / Pasta A-Z",
                            ),
                            ("papel", "Papel"),
                        ],
                        max_length=50,
                        null=True,
                        verbose_name="Tipo de Arquivo",
                    ),
                ),
                (
                    "local_armazenamento",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Local de Armazenamento",
                    ),
                ),
                (
                    "tempo_retencao",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Tempo de Retenção",
                    ),
                ),
                (
                    "descarte",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("destruido", "Destruído"),
                            ("deletar", "Deletar"),
                            ("obsoleto", "Obsoleto"),
                            ("destruido_deletar", "Destruído / Deletar"),
                            ("apagar", "Deletar / Apagar"),
                            ("destruir", "Destruir"),
                        ],
                        max_length=30,
                        null=True,
                        verbose_name="Forma de Descarte",
                    ),
                ),
                (
                    "departamentos",
                    models.ManyToManyField(
                        blank=True,
                        to="Funcionario.departamentos",
                        verbose_name="Departamentos Relacionados",
                    ),
                ),
                (
                    "responsavel_recuperacao",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cargos",
                        to="Funcionario.cargo",
                        verbose_name="Responsável pela Recuperação",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Documentos",
                "ordering": ["nome"],
            },
        ),
        migrations.CreateModel(
            name="Evento",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "titulo",
                    models.CharField(max_length=200, verbose_name="Título do Evento"),
                ),
                (
                    "descricao",
                    models.TextField(blank=True, null=True, verbose_name="Descrição"),
                ),
                ("data_inicio", models.DateField(verbose_name="Data de Início")),
                ("data_fim", models.DateField(verbose_name="Data de Fim")),
                (
                    "cor",
                    models.CharField(
                        default="#3788d8",
                        max_length=7,
                        verbose_name="Cor (hexadecimal)",
                    ),
                ),
                (
                    "tipo",
                    models.CharField(
                        choices=[
                            ("avaliacao_desempenho", "Avaliação de Desempenho"),
                            ("feriado", "Feriado"),
                            ("ponte", "Ponte"),
                            ("confraternizacao", "Confraternização"),
                            ("recesso", "Recesso"),
                            ("auditoria_sgs", "Auditoria SGS"),
                            ("auditoria_interna", "Auditoria Interna"),
                            ("sipat", "SIPAT"),
                            ("inventario", "Inventário"),
                        ],
                        default="avaliacao_desempenho",
                        max_length=20,
                        verbose_name="Tipo de Evento",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Eventos",
                "ordering": ["data_inicio"],
            },
        ),
        migrations.CreateModel(
            name="Funcionario",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nome",
                    models.CharField(max_length=100, verbose_name="Nome Completo"),
                ),
                ("data_admissao", models.DateField(verbose_name="Data de Admissão")),
                (
                    "numero_registro",
                    models.CharField(
                        max_length=20, unique=True, verbose_name="Número de Registro"
                    ),
                ),
                (
                    "numero_registro_recibo",
                    models.CharField(
                        blank=True,
                        max_length=10,
                        null=True,
                        verbose_name="Número do Registro para Recibo",
                    ),
                ),
                (
                    "data_integracao",
                    models.DateField(
                        blank=True, null=True, verbose_name="Data de Integração"
                    ),
                ),
                (
                    "escolaridade",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Escolaridade",
                    ),
                ),
                (
                    "data_desligamento",
                    models.DateField(
                        blank=True, null=True, verbose_name="Data de Desligamento"
                    ),
                ),
                (
                    "genero",
                    models.CharField(
                        choices=[
                            ("Masculino", "Masculino"),
                            ("Feminino", "Feminino"),
                            ("Outro", "Outro"),
                            ("Não Informado", "Não Informado"),
                        ],
                        default="Não Informado",
                        max_length=20,
                        verbose_name="Gênero",
                    ),
                ),
                (
                    "experiencia_profissional",
                    models.CharField(
                        choices=[
                            (
                                "Sim",
                                "Sim, (Anexar Curriculum ou cópia da Carteira Profissional no prontuário)",
                            ),
                            (
                                "Não",
                                "Não, (Justificar através da Avaliação Prática da Atividade, devidamente assinada)",
                            ),
                        ],
                        default="Sim",
                        max_length=3,
                        verbose_name="Experiência Profissional",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "foto",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="fotos_funcionarios/",
                        verbose_name="Foto",
                    ),
                ),
                (
                    "assinatura_eletronica",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to=Funcionario.models.funcionario.renomear_assinatura,
                        verbose_name="Assinatura Eletrônica",
                    ),
                ),
                (
                    "curriculo",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=Funcionario.models.funcionario.renomear_curriculo,
                        verbose_name="Currículo",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("Ativo", "Ativo"), ("Inativo", "Inativo")],
                        default="Ativo",
                        max_length=10,
                        verbose_name="Status",
                    ),
                ),
                (
                    "formulario_f146",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="certificado_ensino/",
                        verbose_name="Formulário F146",
                    ),
                ),
                (
                    "data_nascimento",
                    models.DateField(
                        blank=True, null=True, verbose_name="Data de Nascimento"
                    ),
                ),
                (
                    "camisa",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("PP", "PP"),
                            ("P", "P"),
                            ("M", "M"),
                            ("G", "G"),
                            ("GG", "GG"),
                            ("XG", "XG"),
                            ("XXG", "XXG"),
                        ],
                        max_length=3,
                        null=True,
                        verbose_name="Tamanho da Camisa",
                    ),
                ),
                (
                    "calcado",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="Número do Calçado"
                    ),
                ),
                (
                    "representante_cipa",
                    models.BooleanField(
                        default=False, verbose_name="Representante CIPA"
                    ),
                ),
                (
                    "tipo_cipa",
                    models.CharField(
                        blank=True,
                        choices=[("Titular", "Titular"), ("Suplente", "Suplente")],
                        max_length=20,
                        null=True,
                        verbose_name="Tipo CIPA",
                    ),
                ),
                (
                    "ordem_cipa",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        choices=[(1, "1º"), (2, "2º"), (3, "3º"), (4, "4º")],
                        null=True,
                        verbose_name="Ordem na CIPA",
                    ),
                ),
                (
                    "tipo_representacao_cipa",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Empregados", "Empregados"),
                            ("Empregador", "Empregador"),
                        ],
                        max_length=20,
                        null=True,
                        verbose_name="Representação CIPA",
                    ),
                ),
                (
                    "vigencia_cipa",
                    models.DateField(
                        blank=True, null=True, verbose_name="Vigência CIPA"
                    ),
                ),
                (
                    "representante_brigada",
                    models.BooleanField(
                        default=False, verbose_name="Representante Brigada"
                    ),
                ),
                (
                    "vigencia_brigada",
                    models.DateField(
                        blank=True, null=True, verbose_name="Vigência Brigada"
                    ),
                ),
                (
                    "tipo",
                    models.CharField(
                        choices=[
                            ("operacional", "Operacional"),
                            ("administrativo", "Administrativo"),
                        ],
                        default="operacional",
                        max_length=20,
                        verbose_name="Tipo do Colaborador",
                    ),
                ),
                (
                    "cargo_atual",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cargo_atual_funcionarios",
                        to="Funcionario.cargo",
                        verbose_name="Cargo Atual",
                    ),
                ),
                (
                    "cargo_inicial",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cargo_inicial_funcionarios",
                        to="Funcionario.cargo",
                        verbose_name="Cargo Inicial",
                    ),
                ),
                (
                    "cargo_responsavel",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="responsaveis",
                        to="Funcionario.cargo",
                        verbose_name="Cargo do Responsável",
                    ),
                ),
                (
                    "local_trabalho",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="funcionarios",
                        to="Funcionario.departamentos",
                        verbose_name="Local de Trabalho",
                    ),
                ),
                (
                    "responsavel",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="funcionarios_gerenciados",
                        to="Funcionario.funcionario",
                        verbose_name="Responsável",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="funcionario",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Funcionários",
                "ordering": ["nome"],
            },
        ),
        migrations.CreateModel(
            name="MatrizPolivalencia",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "atualizado_em",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "coordenacao",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="coordenacao_matriz",
                        to="Funcionario.funcionario",
                        verbose_name="Coordenação",
                    ),
                ),
                (
                    "departamento",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="matrizes_polivalencia",
                        to="Funcionario.departamentos",
                        verbose_name="Departamento",
                    ),
                ),
                (
                    "elaboracao",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="elaboracao_matriz",
                        to="Funcionario.funcionario",
                        verbose_name="Elaboração",
                    ),
                ),
                (
                    "validacao",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="validacao_matriz",
                        to="Funcionario.funcionario",
                        verbose_name="Validação",
                    ),
                ),
            ],
            options={
                "verbose_name": "Matriz de Polivalência",
                "verbose_name_plural": "Matrizes de Polivalência",
                "ordering": ["departamento"],
            },
        ),
        migrations.CreateModel(
            name="RevisaoDoc",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "numero_revisao",
                    models.CharField(max_length=20, verbose_name="Número da Revisão"),
                ),
                (
                    "data_revisao",
                    models.DateField(
                        default=django.utils.timezone.now,
                        verbose_name="Data da Revisão",
                    ),
                ),
                (
                    "descricao_mudanca",
                    models.TextField(verbose_name="Descrição da Mudança"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("ativo", "Ativo"), ("inativo", "Inativo")],
                        default="ativo",
                        max_length=10,
                        verbose_name="Status da Revisão",
                    ),
                ),
                (
                    "documento",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="revisoes",
                        to="Funcionario.documento",
                        verbose_name="Documento",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Revisões de Documento",
                "ordering": ["-data_revisao"],
            },
        ),
        migrations.CreateModel(
            name="Settings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nome_empresa",
                    models.CharField(
                        default="BRAS-MOL MOLAS & ESTAMPADOS LTDA",
                        max_length=100,
                        verbose_name="Nome da Empresa",
                    ),
                ),
                (
                    "cep",
                    models.CharField(
                        default="08579000", max_length=20, verbose_name="CEP"
                    ),
                ),
                (
                    "endereco",
                    models.CharField(
                        default="BONSUCESSO, DO, 1961 - RIO ABAIXO - Itaquaquecetuba / SP",
                        max_length=150,
                        verbose_name="Endereço",
                    ),
                ),
                (
                    "telefone",
                    models.CharField(
                        default="1146482611", max_length=20, verbose_name="Telefone"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        default="rh@brasmol.com.br",
                        max_length=254,
                        verbose_name="E-mail",
                    ),
                ),
                (
                    "cnpj",
                    models.CharField(
                        default="61.296.901/0002-48", max_length=20, verbose_name="CNPJ"
                    ),
                ),
                (
                    "logo_claro",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="logos/",
                        verbose_name="Logo (Claro)",
                    ),
                ),
                (
                    "logo_escuro",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="logos/",
                        verbose_name="Logo (Escuro)",
                    ),
                ),
            ],
            options={
                "verbose_name": "Configuração",
                "verbose_name_plural": "Configurações",
            },
        ),
        migrations.CreateModel(
            name="Treinamento",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tipo",
                    models.CharField(
                        choices=[("interno", "Interno"), ("externo", "Externo")],
                        max_length=50,
                        verbose_name="Tipo de Treinamento",
                    ),
                ),
                (
                    "categoria",
                    models.CharField(
                        choices=[
                            ("capacitacao", "Capacitação"),
                            ("tecnico", "Técnico"),
                            ("graduacao", "Graduação"),
                            ("pos-graduacao", "Pos-graduação"),
                            ("treinamento", "Treinamento"),
                            ("divulgacao", "Divulgação"),
                        ],
                        max_length=100,
                        verbose_name="Categoria",
                    ),
                ),
                (
                    "nome_curso",
                    models.CharField(max_length=100, verbose_name="Nome do Curso"),
                ),
                (
                    "instituicao_ensino",
                    models.CharField(
                        default="Bras-Mol",
                        max_length=255,
                        verbose_name="Instituição de Ensino",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("planejado", "Planejado"),
                            ("concluido", "Concluído"),
                            ("trancado", "Trancado"),
                            ("cursando", "Cursando"),
                            ("requerido", "Requerido"),
                        ],
                        default="cursando",
                        max_length=50,
                        verbose_name="Status",
                    ),
                ),
                ("data_inicio", models.DateField(verbose_name="Data de Início")),
                ("data_fim", models.DateField(verbose_name="Data de Término")),
                (
                    "carga_horaria",
                    models.CharField(max_length=50, verbose_name="Carga Horária"),
                ),
                (
                    "anexo",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="certificados/",
                        verbose_name="Anexo",
                    ),
                ),
                (
                    "descricao",
                    django_ckeditor_5.fields.CKEditor5Field(
                        blank=True, null=True, verbose_name="Descrição"
                    ),
                ),
                (
                    "situacao",
                    models.CharField(
                        blank=True,
                        choices=[("aprovado", "Aprovado"), ("reprovado", "Reprovado")],
                        help_text="Campo exibido apenas para treinamentos requeridos.",
                        max_length=50,
                        null=True,
                        verbose_name="Situação",
                    ),
                ),
                (
                    "planejado",
                    models.CharField(
                        choices=[("sim", "Sim"), ("nao", "Não")],
                        default="nao",
                        max_length=3,
                        verbose_name="Planejado",
                    ),
                ),
                (
                    "necessita_avaliacao",
                    models.BooleanField(
                        default=False, verbose_name="Necessita Avaliação"
                    ),
                ),
                (
                    "funcionarios",
                    models.ManyToManyField(
                        related_name="treinamentos",
                        to="Funcionario.funcionario",
                        verbose_name="Funcionários",
                    ),
                ),
            ],
            options={
                "verbose_name": "Treinamento",
                "verbose_name_plural": "Treinamentos",
                "ordering": ["-data_inicio"],
            },
        ),
        migrations.CreateModel(
            name="RevisaoDocLeitura",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "data_leitura",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Data da Leitura"
                    ),
                ),
                (
                    "revisao",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="leituras",
                        to="Funcionario.revisaodoc",
                        verbose_name="Revisão do Documento",
                    ),
                ),
                (
                    "usuario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Usuário",
                    ),
                ),
            ],
            options={
                "verbose_name": "Leitura de Revisão de Documento",
                "verbose_name_plural": "Leituras de Revisões de Documentos",
                "ordering": ["-data_leitura"],
            },
        ),
        migrations.CreateModel(
            name="Revisao",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "numero_revisao",
                    models.CharField(max_length=20, verbose_name="Número da Revisão"),
                ),
                (
                    "data_revisao",
                    models.DateField(
                        default=django.utils.timezone.now,
                        verbose_name="Data da Revisão",
                    ),
                ),
                (
                    "descricao_mudanca",
                    models.TextField(verbose_name="Descrição da Mudança"),
                ),
                (
                    "cargo",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="revisoes",
                        to="Funcionario.cargo",
                        verbose_name="Cargo",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Revisões de Cargo",
                "ordering": ["-data_revisao"],
            },
        ),
        migrations.CreateModel(
            name="ReciboPagamento",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nome_colaborador",
                    models.CharField(
                        max_length=150, verbose_name="Nome do Colaborador"
                    ),
                ),
                ("mes_referencia", models.DateField(verbose_name="Mês de Referência")),
                (
                    "valor_total",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Valor Total",
                    ),
                ),
                (
                    "valor_descontos",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Valor dos Descontos",
                    ),
                ),
                (
                    "valor_liquido",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Valor Líquido",
                    ),
                ),
                (
                    "arquivo_pdf",
                    models.FileField(
                        upload_to="recibos_pagamento/", verbose_name="Arquivo PDF"
                    ),
                ),
                (
                    "data_importacao",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Data de Importação"
                    ),
                ),
                (
                    "funcionario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="recibos_pagamento",
                        to="Funcionario.funcionario",
                        verbose_name="Funcionário",
                    ),
                ),
            ],
            options={
                "verbose_name": "Recibo de Pagamento",
                "verbose_name_plural": "Recibos de Pagamento",
                "ordering": ["-mes_referencia", "nome_colaborador"],
            },
        ),
        migrations.CreateModel(
            name="Nota",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "pontuacao",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "Observador"),
                            (1, "Aprendiz"),
                            (2, "Assistente"),
                            (3, "Autônomo"),
                            (4, "Instrutor"),
                        ],
                        verbose_name="Pontuação",
                    ),
                ),
                (
                    "perfil",
                    models.CharField(
                        choices=[
                            ("suplente", "Suplente"),
                            ("treinado", "Treinado"),
                            ("em_treinamento", "Em Treinamento"),
                            ("oficial", "Oficial"),
                        ],
                        max_length=20,
                        verbose_name="Perfil",
                    ),
                ),
                (
                    "atividade",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notas",
                        to="Funcionario.atividade",
                    ),
                ),
                (
                    "funcionario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notas",
                        to="Funcionario.funcionario",
                    ),
                ),
                (
                    "matriz",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notas",
                        to="Funcionario.matrizpolivalencia",
                    ),
                ),
            ],
            options={
                "verbose_name": "Nota",
                "verbose_name_plural": "Notas",
                "ordering": ["funcionario", "atividade"],
            },
        ),
        migrations.CreateModel(
            name="ListaPresenca",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "treinamento",
                    models.CharField(
                        choices=[
                            ("Treinamento", "Treinamento"),
                            ("Curso", "Curso"),
                            ("Divulgacao", "Divulgação"),
                            ("Conscientização", "Conscientização"),
                        ],
                        max_length=255,
                        verbose_name="Tipo de Evento",
                    ),
                ),
                (
                    "data_inicio",
                    models.DateField(
                        blank=True, null=True, verbose_name="Data de Início"
                    ),
                ),
                (
                    "data_fim",
                    models.DateField(
                        blank=True, null=True, verbose_name="Data de Término"
                    ),
                ),
                (
                    "horario_inicio",
                    models.TimeField(
                        blank=True, null=True, verbose_name="Horário de Início"
                    ),
                ),
                (
                    "horario_fim",
                    models.TimeField(
                        blank=True, null=True, verbose_name="Horário de Término"
                    ),
                ),
                (
                    "instrutor",
                    models.CharField(max_length=255, verbose_name="Instrutor"),
                ),
                (
                    "duracao",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="Duração (horas)",
                    ),
                ),
                (
                    "necessita_avaliacao",
                    models.BooleanField(
                        default=False, verbose_name="Necessita Avaliação?"
                    ),
                ),
                (
                    "lista_presenca",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="listas_presenca/",
                        verbose_name="Arquivo da Lista de Presença",
                    ),
                ),
                (
                    "assunto",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Assunto"
                    ),
                ),
                (
                    "descricao",
                    django_ckeditor_5.fields.CKEditor5Field(verbose_name="Descrição"),
                ),
                (
                    "situacao",
                    models.CharField(
                        choices=[
                            ("finalizado", "Finalizado"),
                            ("em_andamento", "Em Andamento"),
                        ],
                        default="em_andamento",
                        max_length=20,
                        verbose_name="Situação",
                    ),
                ),
                (
                    "planejado",
                    models.CharField(
                        choices=[("sim", "Sim"), ("nao", "Não")],
                        default="nao",
                        max_length=3,
                        verbose_name="Planejado?",
                    ),
                ),
                (
                    "participantes",
                    models.ManyToManyField(
                        related_name="participantes",
                        to="Funcionario.funcionario",
                        verbose_name="Participantes",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Listas de Presença",
                "ordering": ["-data_inicio"],
            },
        ),
        migrations.CreateModel(
            name="JobRotationEvaluation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "local_trabalho",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Local de Trabalho",
                    ),
                ),
                (
                    "competencias",
                    models.TextField(
                        blank=True, null=True, verbose_name="Competências"
                    ),
                ),
                (
                    "data_ultima_avaliacao",
                    models.DateField(
                        blank=True, null=True, verbose_name="Data da Última Avaliação"
                    ),
                ),
                (
                    "status_ultima_avaliacao",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Status da Última Avaliação",
                    ),
                ),
                (
                    "cursos_realizados",
                    models.JSONField(
                        blank=True,
                        default=list,
                        null=True,
                        verbose_name="Cursos Realizados",
                    ),
                ),
                (
                    "escolaridade",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Escolaridade",
                    ),
                ),
                ("area", models.CharField(max_length=100, verbose_name="Área")),
                ("data_inicio", models.DateField(verbose_name="Data de Início")),
                (
                    "termino_previsto",
                    models.DateField(
                        blank=True,
                        editable=False,
                        null=True,
                        verbose_name="Término Previsto",
                    ),
                ),
                (
                    "descricao_cargo",
                    models.TextField(
                        blank=True, null=True, verbose_name="Descrição do Cargo"
                    ),
                ),
                (
                    "treinamentos_requeridos",
                    models.TextField(
                        blank=True, verbose_name="Treinamentos Requeridos"
                    ),
                ),
                (
                    "treinamentos_propostos",
                    models.TextField(blank=True, verbose_name="Treinamentos Propostos"),
                ),
                (
                    "avaliacao_gestor",
                    models.TextField(blank=True, verbose_name="Avaliação do Gestor"),
                ),
                (
                    "avaliacao_funcionario",
                    models.TextField(
                        blank=True, verbose_name="Avaliação do Funcionário"
                    ),
                ),
                (
                    "avaliacao_rh",
                    models.CharField(
                        choices=[
                            ("Apto", "Apto"),
                            ("Inapto", "Inapto"),
                            ("Prorrogar TN", "Prorrogar TN"),
                            ("EmProgresso", "Em Progresso"),
                        ],
                        max_length=20,
                        verbose_name="Avaliação RH",
                    ),
                ),
                (
                    "disponibilidade_vaga",
                    models.BooleanField(
                        default=False, verbose_name="Disponibilidade de Vaga"
                    ),
                ),
                (
                    "anexo",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="job_rotation/evaluations/%Y/%m/%d/",
                        verbose_name="Anexo (arquivo)",
                    ),
                ),
                (
                    "cargo_atual",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="job_rotation_evaluations_cargo",
                        to="Funcionario.cargo",
                        verbose_name="Cargo Atual",
                    ),
                ),
                (
                    "funcionario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="job_rotation_evaluations",
                        to="Funcionario.funcionario",
                        verbose_name="Funcionário",
                    ),
                ),
                (
                    "gestor_responsavel",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="gestor_responsavel",
                        to="Funcionario.funcionario",
                        verbose_name="Gestor Responsável",
                    ),
                ),
                (
                    "nova_funcao",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="nova_funcao",
                        to="Funcionario.cargo",
                        verbose_name="Nova Função",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Avaliações de Job Rotation",
                "ordering": ["-data_inicio"],
            },
        ),
        migrations.CreateModel(
            name="IntegracaoFuncionario",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "grupo_whatsapp",
                    models.BooleanField(
                        default=False, verbose_name="Adicionado ao grupo de WhatsApp"
                    ),
                ),
                (
                    "requer_treinamento",
                    models.BooleanField(
                        default=False, verbose_name="Requer Treinamento"
                    ),
                ),
                (
                    "treinamentos_requeridos",
                    models.TextField(
                        blank=True, null=True, verbose_name="Treinamentos Requeridos"
                    ),
                ),
                (
                    "data_integracao",
                    models.DateField(
                        default=django.utils.timezone.now,
                        verbose_name="Data da Integração",
                    ),
                ),
                (
                    "pdf_integracao",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="integracoes/",
                        verbose_name="PDF da Integração Assinada",
                    ),
                ),
                (
                    "funcionario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Funcionario.funcionario",
                        verbose_name="Funcionário",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Integrações de Funcionários",
                "ordering": ["-data_integracao"],
            },
        ),
        migrations.CreateModel(
            name="HistoricoCargo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "data_atualizacao",
                    models.DateTimeField(verbose_name="Data de Atualização"),
                ),
                (
                    "cargo",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="historico_cargos",
                        to="Funcionario.cargo",
                        verbose_name="Cargo",
                    ),
                ),
                (
                    "funcionario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="historico_cargos",
                        to="Funcionario.funcionario",
                        verbose_name="Funcionário",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Histórico de Cargos",
                "ordering": ["-data_atualizacao"],
            },
        ),
        migrations.CreateModel(
            name="FechamentoIndicadorTreinamento",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ano", models.IntegerField()),
                ("trimestre", models.IntegerField()),
                ("valor_t1", models.FloatField(blank=True, null=True)),
                ("valor_t2", models.FloatField(blank=True, null=True)),
                ("valor_t3", models.FloatField(blank=True, null=True)),
                ("valor_t4", models.FloatField(blank=True, null=True)),
                ("media", models.FloatField(blank=True, null=True)),
                ("data_fechamento", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "unique_together": {("ano", "trimestre")},
            },
        ),
        migrations.AddField(
            model_name="cargo",
            name="aprovador",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="cargos_aprovados",
                to="Funcionario.funcionario",
                verbose_name="Aprovador",
            ),
        ),
        migrations.AddField(
            model_name="cargo",
            name="departamento",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="cargos",
                to="Funcionario.departamentos",
                verbose_name="Departamento",
            ),
        ),
        migrations.AddField(
            model_name="cargo",
            name="elaborador",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="cargos_elaborados",
                to="Funcionario.funcionario",
                verbose_name="Elaborador",
            ),
        ),
        migrations.CreateModel(
            name="BancoHoras",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "data",
                    models.DateField(
                        default=django.utils.timezone.now, verbose_name="Data"
                    ),
                ),
                (
                    "horas_trabalhadas",
                    models.DurationField(
                        blank=True, null=True, verbose_name="Horas Trabalhadas"
                    ),
                ),
                ("observacao", models.TextField(blank=True, verbose_name="Observação")),
                (
                    "he_50",
                    models.BooleanField(default=False, verbose_name="Hora Extra 50%"),
                ),
                (
                    "he_100",
                    models.BooleanField(default=False, verbose_name="Hora Extra 100%"),
                ),
                (
                    "saldo_horas",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Horas positivas ou negativas do dia",
                        max_digits=5,
                        null=True,
                        verbose_name="Saldo (h)",
                    ),
                ),
                (
                    "criado_em",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "atualizado_em",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "funcionario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="banco_horas",
                        to="Funcionario.funcionario",
                        verbose_name="Funcionário",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Banco de Horas",
                "ordering": ["-data"],
            },
        ),
    ]
